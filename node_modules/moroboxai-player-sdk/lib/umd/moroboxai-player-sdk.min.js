!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports):"function"==typeof define&&define.amd?define(["exports"],factory):factory((global="undefined"!=typeof globalThis?globalThis:global||self).MoroboxAIPlayerSDK={})}(this,(function(exports){"use strict";class AgentController{constructor(){this._context={}}get id(){return 0}get isBound(){return void 0!==this._context.inputs}get label(){return void 0!==this._context.LABEL?this._context.LABEL:"Agent"}loadAgent(options){return new Promise((resolve=>{const loadFromCode=(type,code)=>{const context={};new Function("exports",`${code} \n                if (typeof LABEL !== "undefined") {\n                    exports.LABEL = LABEL;\n                }\n                \n                if (typeof saveState !== "undefined") {\n                    exports.saveState = saveState;\n                }\n                \n                if (typeof loadState !== "undefined") {\n                    exports.loadState = loadState;\n                }\n                \n                if (typeof inputs !== "undefined") {\n                    exports.inputs = inputs;\n                }`)(context),this.unloadAgent(),this._context=context,resolve()};void 0!==options.url?fetch(options.url).then((response=>response.text())).then((code=>loadFromCode(void 0!==options.type?options.type:options.url,code))):void 0!==options.code&&loadFromCode(void 0!==options.type&&options.type,options.code)}))}unloadAgent(){this._context={}}inputs(state){return void 0===this._context.inputs?{}:this._context.inputs(state)}saveState(){return void 0!==this._context.saveState?this._context.saveState():{}}loadState(state){void 0!==this._context.loadState&&this._context.loadState(state)}}class Controller{get id(){return this._id}get isBound(){return!1}get label(){return this._agentController.isBound?this._agentController.label:void 0!==this._inputController?"human":"<>"}constructor(id,inputController){this._id=id,this._inputController=inputController,this._agentController=new AgentController}inputs(state){return this._agentController.isBound?this._agentController.inputs(state):void 0!==this._inputController?this._inputController.inputs:{}}loadAgent(options){return this._agentController.loadAgent(options)}unloadAgent(){this._agentController.unloadAgent()}saveState(){return this._agentController.saveState()}loadState(state){this._agentController.loadState(state)}}class ControllerBus{get ids(){return[...this._controllers.keys()]}get controllers(){return this._controllers}constructor(options){this._controllers=new Map,this._controllers.set(0,new Controller(0,options.inputController())),this._controllers.set(1,new Controller(1))}get(controllerId){return this._controllers.get(controllerId)}inputs(state){return[this._controllers.get(0).inputs(state),this._controllers.get(1).inputs(state)]}saveState(){return[this._controllers.get(0).saveState(),this._controllers.get(1).saveState()]}loadState(state){this._controllers.get(0).loadState(state),this._controllers.get(1).loadState(state)}}class SpinnerChild{constructor(root,animationDelay){this._el=document.createElement("div"),this._el.style.boxSizing="border-box",this._el.style.display="block",this._el.style.position="absolute",this._el.style.width="32px",this._el.style.height="32px",this._el.style.margin="4px",this._el.style.border="4px solid #fff",this._el.style.borderRadius="50%",this._el.style.animation="moroboxai-spinner-rotate 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite",this._el.style.borderColor="#fff transparent transparent transparent",void 0!==animationDelay&&(this._el.style.animationDelay=`-${animationDelay}s`),root.appendChild(this._el)}}class Spinner{constructor(root){this._el=document.createElement("div"),this._el.style.display="inline-block",this._el.style.position="relative",this._el.style.width="40px",this._el.style.height="40px",new SpinnerChild(this._el,.45),new SpinnerChild(this._el,.3),new SpinnerChild(this._el,.15),new SpinnerChild(this._el),root.appendChild(this._el);let style=document.getElementById("moroboxai-dynamic-style");style||(style=document.createElement("style"),style.id="moroboxai-dynamic-style",document.body.appendChild(style)),style.innerHTML="@keyframes moroboxai-spinner-rotate {\n   0% {\n      transform: rotate(0deg);\n   }\n   100% {\n      transform: rotate(360deg);\n   }\n}"}remove(){this._el.remove()}}class OverlayDiv{get style(){return this.el.style}constructor(root){this.el=document.createElement("div"),this.el.style.width="100%",this.el.style.height="100%",this.el.style.position="absolute",this.el.style.left="0",this.el.style.top="0",this.el.style.display="flex",this.el.style.flexDirection="column",this.el.style.justifyContent="center",this.el.style.alignItems="center",root.appendChild(this.el)}show(){this.el.style.display="flex"}hide(){this.el.style.display="none"}remove(){this.el.remove()}}class PlayOverlayDiv{constructor(root){this._overlay=new OverlayDiv(root),this._input=document.createElement("input"),this._input.type="button",this._input.value="Play",this._input.onclick=()=>{this.onPlay&&this.onPlay()},this._overlay.el.appendChild(this._input),root.appendChild(this._overlay.el)}show(){this._overlay.show()}hide(){this._overlay.hide()}mouseEnter(){}mouseMove(){}mouseLeave(){}remove(){this._overlay.remove()}}class LoadingOverlayDiv{constructor(root){this._overlay=new OverlayDiv(root),this._overlay.style.backgroundColor="black",new Spinner(this._overlay.el),root.appendChild(this._overlay.el)}show(){this._overlay.show()}hide(){this._overlay.hide()}mouseEnter(){}mouseMove(){}mouseLeave(){}remove(){this._overlay.remove()}}class SettingsOverlayDiv{constructor(root){this._overlay=new OverlayDiv(root),this._speed1=document.createElement("input"),this._speed1.type="button",this._speed1.value="x1",this._speed1.onclick=()=>{this.onSpeed&&this.onSpeed(1)},this._speed2=document.createElement("input"),this._speed2.type="button",this._speed2.value="x2",this._speed2.onclick=()=>{this.onSpeed&&this.onSpeed(2)},this._speed4=document.createElement("input"),this._speed4.type="button",this._speed4.value="x4",this._speed4.onclick=()=>{this.onSpeed&&this.onSpeed(4)},this._overlay.el.appendChild(this._speed1),this._overlay.el.appendChild(this._speed2),this._overlay.el.appendChild(this._speed4),this._overlay.hide(),root.appendChild(this._overlay.el)}playing(){}paused(){}show(){this._overlay.show()}hide(){this._overlay.hide()}mouseEnter(){this.show()}mouseMove(){}mouseLeave(){this.hide()}remove(){this._overlay.remove()}}class Overlay{constructor(root){this._root=root,this._playOverlay=new PlayOverlayDiv(root),this._selectedOverlay=this._playOverlay,this._playOverlay.onPlay=()=>{this.onPlay&&this.onPlay()},this._loadingOverlay=new LoadingOverlayDiv(this._root),this._loadingOverlay.hide(),this._settingsOverlay=new SettingsOverlayDiv(this._root),this._settingsOverlay.hide(),this._settingsOverlay.onSpeed=value=>{this.onSpeed&&this.onSpeed(value)}}stopped(){this._selectedOverlay.hide(),this._selectedOverlay=this._playOverlay,this._playOverlay.show()}loading(){this._playOverlay.hide(),this._selectedOverlay=this._loadingOverlay,this._loadingOverlay.show()}playing(){this._loadingOverlay.hide(),this._selectedOverlay=this._settingsOverlay,this._settingsOverlay.hide(),this._settingsOverlay.playing()}paused(){this._settingsOverlay.paused()}show(){}hide(){}mouseEnter(){this._selectedOverlay.mouseEnter()}mouseMove(){this._selectedOverlay.mouseMove()}mouseLeave(){this._selectedOverlay.mouseLeave()}remove(){this._playOverlay.remove(),this._loadingOverlay.remove(),this._settingsOverlay.remove()}}const ALIAS=Symbol.for("yaml.alias"),DOC=Symbol.for("yaml.document"),MAP=Symbol.for("yaml.map"),PAIR=Symbol.for("yaml.pair"),SCALAR$1=Symbol.for("yaml.scalar"),SEQ=Symbol.for("yaml.seq"),NODE_TYPE=Symbol.for("yaml.node.type"),isAlias=node=>!!node&&"object"==typeof node&&node[NODE_TYPE]===ALIAS,isDocument=node=>!!node&&"object"==typeof node&&node[NODE_TYPE]===DOC,isMap=node=>!!node&&"object"==typeof node&&node[NODE_TYPE]===MAP,isPair=node=>!!node&&"object"==typeof node&&node[NODE_TYPE]===PAIR,isScalar$1=node=>!!node&&"object"==typeof node&&node[NODE_TYPE]===SCALAR$1,isSeq=node=>!!node&&"object"==typeof node&&node[NODE_TYPE]===SEQ;function isCollection$1(node){if(node&&"object"==typeof node)switch(node[NODE_TYPE]){case MAP:case SEQ:return!0}return!1}function isNode(node){if(node&&"object"==typeof node)switch(node[NODE_TYPE]){case ALIAS:case MAP:case SCALAR$1:case SEQ:return!0}return!1}const hasAnchor=node=>(isScalar$1(node)||isCollection$1(node))&&!!node.anchor,BREAK$1=Symbol("break visit"),SKIP$1=Symbol("skip children"),REMOVE$1=Symbol("remove node");function visit$1(node,visitor){const visitor_=initVisitor(visitor);if(isDocument(node)){visit_(null,node.contents,visitor_,Object.freeze([node]))===REMOVE$1&&(node.contents=null)}else visit_(null,node,visitor_,Object.freeze([]))}function visit_(key,node,visitor,path){const ctrl=callVisitor(key,node,visitor,path);if(isNode(ctrl)||isPair(ctrl))return replaceNode(key,path,ctrl),visit_(key,ctrl,visitor,path);if("symbol"!=typeof ctrl)if(isCollection$1(node)){path=Object.freeze(path.concat(node));for(let i=0;i<node.items.length;++i){const ci=visit_(i,node.items[i],visitor,path);if("number"==typeof ci)i=ci-1;else{if(ci===BREAK$1)return BREAK$1;ci===REMOVE$1&&(node.items.splice(i,1),i-=1)}}}else if(isPair(node)){path=Object.freeze(path.concat(node));const ck=visit_("key",node.key,visitor,path);if(ck===BREAK$1)return BREAK$1;ck===REMOVE$1&&(node.key=null);const cv=visit_("value",node.value,visitor,path);if(cv===BREAK$1)return BREAK$1;cv===REMOVE$1&&(node.value=null)}return ctrl}async function visitAsync(node,visitor){const visitor_=initVisitor(visitor);if(isDocument(node)){await visitAsync_(null,node.contents,visitor_,Object.freeze([node]))===REMOVE$1&&(node.contents=null)}else await visitAsync_(null,node,visitor_,Object.freeze([]))}async function visitAsync_(key,node,visitor,path){const ctrl=await callVisitor(key,node,visitor,path);if(isNode(ctrl)||isPair(ctrl))return replaceNode(key,path,ctrl),visitAsync_(key,ctrl,visitor,path);if("symbol"!=typeof ctrl)if(isCollection$1(node)){path=Object.freeze(path.concat(node));for(let i=0;i<node.items.length;++i){const ci=await visitAsync_(i,node.items[i],visitor,path);if("number"==typeof ci)i=ci-1;else{if(ci===BREAK$1)return BREAK$1;ci===REMOVE$1&&(node.items.splice(i,1),i-=1)}}}else if(isPair(node)){path=Object.freeze(path.concat(node));const ck=await visitAsync_("key",node.key,visitor,path);if(ck===BREAK$1)return BREAK$1;ck===REMOVE$1&&(node.key=null);const cv=await visitAsync_("value",node.value,visitor,path);if(cv===BREAK$1)return BREAK$1;cv===REMOVE$1&&(node.value=null)}return ctrl}function initVisitor(visitor){return"object"==typeof visitor&&(visitor.Collection||visitor.Node||visitor.Value)?Object.assign({Alias:visitor.Node,Map:visitor.Node,Scalar:visitor.Node,Seq:visitor.Node},visitor.Value&&{Map:visitor.Value,Scalar:visitor.Value,Seq:visitor.Value},visitor.Collection&&{Map:visitor.Collection,Seq:visitor.Collection},visitor):visitor}function callVisitor(key,node,visitor,path){return"function"==typeof visitor?visitor(key,node,path):isMap(node)?visitor.Map?.(key,node,path):isSeq(node)?visitor.Seq?.(key,node,path):isPair(node)?visitor.Pair?.(key,node,path):isScalar$1(node)?visitor.Scalar?.(key,node,path):isAlias(node)?visitor.Alias?.(key,node,path):void 0}function replaceNode(key,path,node){const parent=path[path.length-1];if(isCollection$1(parent))parent.items[key]=node;else if(isPair(parent))"key"===key?parent.key=node:parent.value=node;else{if(!isDocument(parent)){const pt=isAlias(parent)?"alias":"scalar";throw new Error(`Cannot replace node with ${pt} parent`)}parent.contents=node}}visit$1.BREAK=BREAK$1,visit$1.SKIP=SKIP$1,visit$1.REMOVE=REMOVE$1,visitAsync.BREAK=BREAK$1,visitAsync.SKIP=SKIP$1,visitAsync.REMOVE=REMOVE$1;const escapeChars={"!":"%21",",":"%2C","[":"%5B","]":"%5D","{":"%7B","}":"%7D"};class Directives{constructor(yaml,tags){this.docStart=null,this.docEnd=!1,this.yaml=Object.assign({},Directives.defaultYaml,yaml),this.tags=Object.assign({},Directives.defaultTags,tags)}clone(){const copy=new Directives(this.yaml,this.tags);return copy.docStart=this.docStart,copy}atDocument(){const res=new Directives(this.yaml,this.tags);switch(this.yaml.version){case"1.1":this.atNextDocument=!0;break;case"1.2":this.atNextDocument=!1,this.yaml={explicit:Directives.defaultYaml.explicit,version:"1.2"},this.tags=Object.assign({},Directives.defaultTags)}return res}add(line,onError){this.atNextDocument&&(this.yaml={explicit:Directives.defaultYaml.explicit,version:"1.1"},this.tags=Object.assign({},Directives.defaultTags),this.atNextDocument=!1);const parts=line.trim().split(/[ \t]+/),name=parts.shift();switch(name){case"%TAG":{if(2!==parts.length&&(onError(0,"%TAG directive should contain exactly two parts"),parts.length<2))return!1;const[handle,prefix]=parts;return this.tags[handle]=prefix,!0}case"%YAML":{if(this.yaml.explicit=!0,1!==parts.length)return onError(0,"%YAML directive should contain exactly one part"),!1;const[version]=parts;if("1.1"===version||"1.2"===version)return this.yaml.version=version,!0;return onError(6,`Unsupported YAML version ${version}`,/^\d+\.\d+$/.test(version)),!1}default:return onError(0,`Unknown directive ${name}`,!0),!1}}tagName(source,onError){if("!"===source)return"!";if("!"!==source[0])return onError(`Not a valid tag: ${source}`),null;if("<"===source[1]){const verbatim=source.slice(2,-1);return"!"===verbatim||"!!"===verbatim?(onError(`Verbatim tags aren't resolved, so ${source} is invalid.`),null):(">"!==source[source.length-1]&&onError("Verbatim tags must end with a >"),verbatim)}const[,handle,suffix]=source.match(/^(.*!)([^!]*)$/);suffix||onError(`The ${source} tag has no suffix`);const prefix=this.tags[handle];return prefix?prefix+decodeURIComponent(suffix):"!"===handle?source:(onError(`Could not resolve tag: ${source}`),null)}tagString(tag){for(const[handle,prefix]of Object.entries(this.tags))if(tag.startsWith(prefix))return handle+tag.substring(prefix.length).replace(/[!,[\]{}]/g,(ch=>escapeChars[ch]));return"!"===tag[0]?tag:`!<${tag}>`}toString(doc){const lines=this.yaml.explicit?[`%YAML ${this.yaml.version||"1.2"}`]:[],tagEntries=Object.entries(this.tags);let tagNames;if(doc&&tagEntries.length>0&&isNode(doc.contents)){const tags={};visit$1(doc.contents,((_key,node)=>{isNode(node)&&node.tag&&(tags[node.tag]=!0)})),tagNames=Object.keys(tags)}else tagNames=[];for(const[handle,prefix]of tagEntries)"!!"===handle&&"tag:yaml.org,2002:"===prefix||doc&&!tagNames.some((tn=>tn.startsWith(prefix)))||lines.push(`%TAG ${handle} ${prefix}`);return lines.join("\n")}}function anchorIsValid(anchor){if(/[\x00-\x19\s,[\]{}]/.test(anchor)){const sa=JSON.stringify(anchor);throw new Error(`Anchor must not contain whitespace or control characters: ${sa}`)}return!0}function anchorNames(root){const anchors=new Set;return visit$1(root,{Value(_key,node){node.anchor&&anchors.add(node.anchor)}}),anchors}function findNewAnchor(prefix,exclude){for(let i=1;;++i){const name=`${prefix}${i}`;if(!exclude.has(name))return name}}function applyReviver(reviver,obj,key,val){if(val&&"object"==typeof val)if(Array.isArray(val))for(let i=0,len=val.length;i<len;++i){const v0=val[i],v1=applyReviver(reviver,val,String(i),v0);void 0===v1?delete val[i]:v1!==v0&&(val[i]=v1)}else if(val instanceof Map)for(const k of Array.from(val.keys())){const v0=val.get(k),v1=applyReviver(reviver,val,k,v0);void 0===v1?val.delete(k):v1!==v0&&val.set(k,v1)}else if(val instanceof Set)for(const v0 of Array.from(val)){const v1=applyReviver(reviver,val,v0,v0);void 0===v1?val.delete(v0):v1!==v0&&(val.delete(v0),val.add(v1))}else for(const[k,v0]of Object.entries(val)){const v1=applyReviver(reviver,val,k,v0);void 0===v1?delete val[k]:v1!==v0&&(val[k]=v1)}return reviver.call(obj,key,val)}function toJS(value,arg,ctx){if(Array.isArray(value))return value.map(((v,i)=>toJS(v,String(i),ctx)));if(value&&"function"==typeof value.toJSON){if(!ctx||!hasAnchor(value))return value.toJSON(arg,ctx);const data={aliasCount:0,count:1,res:void 0};ctx.anchors.set(value,data),ctx.onCreate=res=>{data.res=res,delete ctx.onCreate};const res=value.toJSON(arg,ctx);return ctx.onCreate&&ctx.onCreate(res),res}return"bigint"!=typeof value||ctx?.keep?value:Number(value)}Directives.defaultYaml={explicit:!1,version:"1.2"},Directives.defaultTags={"!!":"tag:yaml.org,2002:"};class NodeBase{constructor(type){Object.defineProperty(this,NODE_TYPE,{value:type})}clone(){const copy=Object.create(Object.getPrototypeOf(this),Object.getOwnPropertyDescriptors(this));return this.range&&(copy.range=this.range.slice()),copy}toJS(doc,{mapAsMap:mapAsMap,maxAliasCount:maxAliasCount,onAnchor:onAnchor,reviver:reviver}={}){if(!isDocument(doc))throw new TypeError("A document argument is required");const ctx={anchors:new Map,doc:doc,keep:!0,mapAsMap:!0===mapAsMap,mapKeyWarned:!1,maxAliasCount:"number"==typeof maxAliasCount?maxAliasCount:100},res=toJS(this,"",ctx);if("function"==typeof onAnchor)for(const{count:count,res:res}of ctx.anchors.values())onAnchor(res,count);return"function"==typeof reviver?applyReviver(reviver,{"":res},"",res):res}}class Alias extends NodeBase{constructor(source){super(ALIAS),this.source=source,Object.defineProperty(this,"tag",{set(){throw new Error("Alias nodes cannot have tags")}})}resolve(doc){let found;return visit$1(doc,{Node:(_key,node)=>{if(node===this)return visit$1.BREAK;node.anchor===this.source&&(found=node)}}),found}toJSON(_arg,ctx){if(!ctx)return{source:this.source};const{anchors:anchors,doc:doc,maxAliasCount:maxAliasCount}=ctx,source=this.resolve(doc);if(!source){const msg=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new ReferenceError(msg)}let data=anchors.get(source);if(data||(toJS(source,null,ctx),data=anchors.get(source)),!data||void 0===data.res){throw new ReferenceError("This should not happen: Alias anchor was not resolved?")}if(maxAliasCount>=0&&(data.count+=1,0===data.aliasCount&&(data.aliasCount=getAliasCount(doc,source,anchors)),data.count*data.aliasCount>maxAliasCount)){throw new ReferenceError("Excessive alias count indicates a resource exhaustion attack")}return data.res}toString(ctx,_onComment,_onChompKeep){const src=`*${this.source}`;if(ctx){if(anchorIsValid(this.source),ctx.options.verifyAliasOrder&&!ctx.anchors.has(this.source)){const msg=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new Error(msg)}if(ctx.implicitKey)return`${src} `}return src}}function getAliasCount(doc,node,anchors){if(isAlias(node)){const source=node.resolve(doc),anchor=anchors&&source&&anchors.get(source);return anchor?anchor.count*anchor.aliasCount:0}if(isCollection$1(node)){let count=0;for(const item of node.items){const c=getAliasCount(doc,item,anchors);c>count&&(count=c)}return count}if(isPair(node)){const kc=getAliasCount(doc,node.key,anchors),vc=getAliasCount(doc,node.value,anchors);return Math.max(kc,vc)}return 1}const isScalarValue=value=>!value||"function"!=typeof value&&"object"!=typeof value;class Scalar extends NodeBase{constructor(value){super(SCALAR$1),this.value=value}toJSON(arg,ctx){return ctx?.keep?this.value:toJS(this.value,arg,ctx)}toString(){return String(this.value)}}Scalar.BLOCK_FOLDED="BLOCK_FOLDED",Scalar.BLOCK_LITERAL="BLOCK_LITERAL",Scalar.PLAIN="PLAIN",Scalar.QUOTE_DOUBLE="QUOTE_DOUBLE",Scalar.QUOTE_SINGLE="QUOTE_SINGLE";const defaultTagPrefix="tag:yaml.org,2002:";function createNode(value,tagName,ctx){if(isDocument(value)&&(value=value.contents),isNode(value))return value;if(isPair(value)){const map=ctx.schema[MAP].createNode?.(ctx.schema,null,ctx);return map.items.push(value),map}(value instanceof String||value instanceof Number||value instanceof Boolean||"undefined"!=typeof BigInt&&value instanceof BigInt)&&(value=value.valueOf());const{aliasDuplicateObjects:aliasDuplicateObjects,onAnchor:onAnchor,onTagObj:onTagObj,schema:schema,sourceObjects:sourceObjects}=ctx;let ref;if(aliasDuplicateObjects&&value&&"object"==typeof value){if(ref=sourceObjects.get(value),ref)return ref.anchor||(ref.anchor=onAnchor(value)),new Alias(ref.anchor);ref={anchor:null,node:null},sourceObjects.set(value,ref)}tagName?.startsWith("!!")&&(tagName=defaultTagPrefix+tagName.slice(2));let tagObj=function(value,tagName,tags){if(tagName){const match=tags.filter((t=>t.tag===tagName)),tagObj=match.find((t=>!t.format))??match[0];if(!tagObj)throw new Error(`Tag ${tagName} not found`);return tagObj}return tags.find((t=>t.identify?.(value)&&!t.format))}(value,tagName,schema.tags);if(!tagObj){if(value&&"function"==typeof value.toJSON&&(value=value.toJSON()),!value||"object"!=typeof value){const node=new Scalar(value);return ref&&(ref.node=node),node}tagObj=value instanceof Map?schema[MAP]:Symbol.iterator in Object(value)?schema[SEQ]:schema[MAP]}onTagObj&&(onTagObj(tagObj),delete ctx.onTagObj);const node=tagObj?.createNode?tagObj.createNode(ctx.schema,value,ctx):"function"==typeof tagObj?.nodeClass?.from?tagObj.nodeClass.from(ctx.schema,value,ctx):new Scalar(value);return tagName?node.tag=tagName:tagObj.default||(node.tag=tagObj.tag),ref&&(ref.node=node),node}function collectionFromPath(schema,path,value){let v=value;for(let i=path.length-1;i>=0;--i){const k=path[i];if("number"==typeof k&&Number.isInteger(k)&&k>=0){const a=[];a[k]=v,v=a}else v=new Map([[k,v]])}return createNode(v,void 0,{aliasDuplicateObjects:!1,keepUndefined:!1,onAnchor:()=>{throw new Error("This should not happen, please report a bug.")},schema:schema,sourceObjects:new Map})}const isEmptyPath=path=>null==path||"object"==typeof path&&!!path[Symbol.iterator]().next().done;class Collection extends NodeBase{constructor(type,schema){super(type),Object.defineProperty(this,"schema",{value:schema,configurable:!0,enumerable:!1,writable:!0})}clone(schema){const copy=Object.create(Object.getPrototypeOf(this),Object.getOwnPropertyDescriptors(this));return schema&&(copy.schema=schema),copy.items=copy.items.map((it=>isNode(it)||isPair(it)?it.clone(schema):it)),this.range&&(copy.range=this.range.slice()),copy}addIn(path,value){if(isEmptyPath(path))this.add(value);else{const[key,...rest]=path,node=this.get(key,!0);if(isCollection$1(node))node.addIn(rest,value);else{if(void 0!==node||!this.schema)throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);this.set(key,collectionFromPath(this.schema,rest,value))}}}deleteIn(path){const[key,...rest]=path;if(0===rest.length)return this.delete(key);const node=this.get(key,!0);if(isCollection$1(node))return node.deleteIn(rest);throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`)}getIn(path,keepScalar){const[key,...rest]=path,node=this.get(key,!0);return 0===rest.length?!keepScalar&&isScalar$1(node)?node.value:node:isCollection$1(node)?node.getIn(rest,keepScalar):void 0}hasAllNullValues(allowScalar){return this.items.every((node=>{if(!isPair(node))return!1;const n=node.value;return null==n||allowScalar&&isScalar$1(n)&&null==n.value&&!n.commentBefore&&!n.comment&&!n.tag}))}hasIn(path){const[key,...rest]=path;if(0===rest.length)return this.has(key);const node=this.get(key,!0);return!!isCollection$1(node)&&node.hasIn(rest)}setIn(path,value){const[key,...rest]=path;if(0===rest.length)this.set(key,value);else{const node=this.get(key,!0);if(isCollection$1(node))node.setIn(rest,value);else{if(void 0!==node||!this.schema)throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);this.set(key,collectionFromPath(this.schema,rest,value))}}}}Collection.maxFlowStringSingleLineLength=60;const stringifyComment=str=>str.replace(/^(?!$)(?: $)?/gm,"#");function indentComment(comment,indent){return/^\n+$/.test(comment)?comment.substring(1):indent?comment.replace(/^(?! *$)/gm,indent):comment}const lineComment=(str,indent,comment)=>str.endsWith("\n")?indentComment(comment,indent):comment.includes("\n")?"\n"+indentComment(comment,indent):(str.endsWith(" ")?"":" ")+comment,FOLD_FLOW="flow",FOLD_BLOCK="block",FOLD_QUOTED="quoted";function foldFlowLines(text,indent,mode="flow",{indentAtStart:indentAtStart,lineWidth:lineWidth=80,minContentWidth:minContentWidth=20,onFold:onFold,onOverflow:onOverflow}={}){if(!lineWidth||lineWidth<0)return text;const endStep=Math.max(1+minContentWidth,1+lineWidth-indent.length);if(text.length<=endStep)return text;const folds=[],escapedFolds={};let split,prev,end=lineWidth-indent.length;"number"==typeof indentAtStart&&(indentAtStart>lineWidth-Math.max(2,minContentWidth)?folds.push(0):end=lineWidth-indentAtStart);let overflow=!1,i=-1,escStart=-1,escEnd=-1;mode===FOLD_BLOCK&&(i=consumeMoreIndentedLines(text,i),-1!==i&&(end=i+endStep));for(let ch;ch=text[i+=1];){if(mode===FOLD_QUOTED&&"\\"===ch){switch(escStart=i,text[i+1]){case"x":i+=3;break;case"u":i+=5;break;case"U":i+=9;break;default:i+=1}escEnd=i}if("\n"===ch)mode===FOLD_BLOCK&&(i=consumeMoreIndentedLines(text,i)),end=i+endStep,split=void 0;else{if(" "===ch&&prev&&" "!==prev&&"\n"!==prev&&"\t"!==prev){const next=text[i+1];next&&" "!==next&&"\n"!==next&&"\t"!==next&&(split=i)}if(i>=end)if(split)folds.push(split),end=split+endStep,split=void 0;else if(mode===FOLD_QUOTED){for(;" "===prev||"\t"===prev;)prev=ch,ch=text[i+=1],overflow=!0;const j=i>escEnd+1?i-2:escStart-1;if(escapedFolds[j])return text;folds.push(j),escapedFolds[j]=!0,end=j+endStep,split=void 0}else overflow=!0}prev=ch}if(overflow&&onOverflow&&onOverflow(),0===folds.length)return text;onFold&&onFold();let res=text.slice(0,folds[0]);for(let i=0;i<folds.length;++i){const fold=folds[i],end=folds[i+1]||text.length;0===fold?res=`\n${indent}${text.slice(0,end)}`:(mode===FOLD_QUOTED&&escapedFolds[fold]&&(res+=`${text[fold]}\\`),res+=`\n${indent}${text.slice(fold+1,end)}`)}return res}function consumeMoreIndentedLines(text,i){let ch=text[i+1];for(;" "===ch||"\t"===ch;){do{ch=text[i+=1]}while(ch&&"\n"!==ch);ch=text[i+1]}return i}const getFoldOptions=(ctx,isBlock)=>({indentAtStart:isBlock?ctx.indent.length:ctx.indentAtStart,lineWidth:ctx.options.lineWidth,minContentWidth:ctx.options.minContentWidth}),containsDocumentMarker=str=>/^(%|---|\.\.\.)/m.test(str);function doubleQuotedString(value,ctx){const json=JSON.stringify(value);if(ctx.options.doubleQuotedAsJSON)return json;const{implicitKey:implicitKey}=ctx,minMultiLineLength=ctx.options.doubleQuotedMinMultiLineLength,indent=ctx.indent||(containsDocumentMarker(value)?"  ":"");let str="",start=0;for(let i=0,ch=json[i];ch;ch=json[++i])if(" "===ch&&"\\"===json[i+1]&&"n"===json[i+2]&&(str+=json.slice(start,i)+"\\ ",i+=1,start=i,ch="\\"),"\\"===ch)switch(json[i+1]){case"u":{str+=json.slice(start,i);const code=json.substr(i+2,4);switch(code){case"0000":str+="\\0";break;case"0007":str+="\\a";break;case"000b":str+="\\v";break;case"001b":str+="\\e";break;case"0085":str+="\\N";break;case"00a0":str+="\\_";break;case"2028":str+="\\L";break;case"2029":str+="\\P";break;default:"00"===code.substr(0,2)?str+="\\x"+code.substr(2):str+=json.substr(i,6)}i+=5,start=i+1}break;case"n":if(implicitKey||'"'===json[i+2]||json.length<minMultiLineLength)i+=1;else{for(str+=json.slice(start,i)+"\n\n";"\\"===json[i+2]&&"n"===json[i+3]&&'"'!==json[i+4];)str+="\n",i+=2;str+=indent," "===json[i+2]&&(str+="\\"),i+=1,start=i+1}break;default:i+=1}return str=start?str+json.slice(start):json,implicitKey?str:foldFlowLines(str,indent,FOLD_QUOTED,getFoldOptions(ctx,!1))}function singleQuotedString(value,ctx){if(!1===ctx.options.singleQuote||ctx.implicitKey&&value.includes("\n")||/[ \t]\n|\n[ \t]/.test(value))return doubleQuotedString(value,ctx);const indent=ctx.indent||(containsDocumentMarker(value)?"  ":""),res="'"+value.replace(/'/g,"''").replace(/\n+/g,`$&\n${indent}`)+"'";return ctx.implicitKey?res:foldFlowLines(res,indent,FOLD_FLOW,getFoldOptions(ctx,!1))}function quotedString(value,ctx){const{singleQuote:singleQuote}=ctx.options;let qs;if(!1===singleQuote)qs=doubleQuotedString;else{const hasDouble=value.includes('"'),hasSingle=value.includes("'");qs=hasDouble&&!hasSingle?singleQuotedString:hasSingle&&!hasDouble?doubleQuotedString:singleQuote?singleQuotedString:doubleQuotedString}return qs(value,ctx)}let blockEndNewlines;try{blockEndNewlines=new RegExp("(^|(?<!\n))\n+(?!\n|$)","g")}catch{blockEndNewlines=/\n+(?!\n|$)/g}function blockString({comment:comment,type:type,value:value},ctx,onComment,onChompKeep){const{blockQuote:blockQuote,commentString:commentString,lineWidth:lineWidth}=ctx.options;if(!blockQuote||/\n[\t ]+$/.test(value)||/^\s*$/.test(value))return quotedString(value,ctx);const indent=ctx.indent||(ctx.forceBlockIndent||containsDocumentMarker(value)?"  ":""),literal="literal"===blockQuote||"folded"!==blockQuote&&type!==Scalar.BLOCK_FOLDED&&(type===Scalar.BLOCK_LITERAL||!function(str,lineWidth,indentLength){if(!lineWidth||lineWidth<0)return!1;const limit=lineWidth-indentLength,strLen=str.length;if(strLen<=limit)return!1;for(let i=0,start=0;i<strLen;++i)if("\n"===str[i]){if(i-start>limit)return!0;if(start=i+1,strLen-start<=limit)return!1}return!0}(value,lineWidth,indent.length));if(!value)return literal?"|\n":">\n";let chomp,endStart;for(endStart=value.length;endStart>0;--endStart){const ch=value[endStart-1];if("\n"!==ch&&"\t"!==ch&&" "!==ch)break}let end=value.substring(endStart);const endNlPos=end.indexOf("\n");-1===endNlPos?chomp="-":value===end||endNlPos!==end.length-1?(chomp="+",onChompKeep&&onChompKeep()):chomp="",end&&(value=value.slice(0,-end.length),"\n"===end[end.length-1]&&(end=end.slice(0,-1)),end=end.replace(blockEndNewlines,`$&${indent}`));let startEnd,startWithSpace=!1,startNlPos=-1;for(startEnd=0;startEnd<value.length;++startEnd){const ch=value[startEnd];if(" "===ch)startWithSpace=!0;else{if("\n"!==ch)break;startNlPos=startEnd}}let start=value.substring(0,startNlPos<startEnd?startNlPos+1:startEnd);start&&(value=value.substring(start.length),start=start.replace(/\n+/g,`$&${indent}`));let header=(literal?"|":">")+(startWithSpace?indent?"2":"1":"")+chomp;if(comment&&(header+=" "+commentString(comment.replace(/ ?[\r\n]+/g," ")),onComment&&onComment()),literal)return`${header}\n${indent}${start}${value=value.replace(/\n+/g,`$&${indent}`)}${end}`;return`${header}\n${indent}${foldFlowLines(`${start}${value=value.replace(/\n+/g,"\n$&").replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g,"$1$2").replace(/\n+/g,`$&${indent}`)}${end}`,indent,FOLD_BLOCK,getFoldOptions(ctx,!0))}`}function stringifyString(item,ctx,onComment,onChompKeep){const{implicitKey:implicitKey,inFlow:inFlow}=ctx,ss="string"==typeof item.value?item:Object.assign({},item,{value:String(item.value)});let{type:type}=item;type!==Scalar.QUOTE_DOUBLE&&/[\x00-\x08\x0b-\x1f\x7f-\x9f\u{D800}-\u{DFFF}]/u.test(ss.value)&&(type=Scalar.QUOTE_DOUBLE);const _stringify=_type=>{switch(_type){case Scalar.BLOCK_FOLDED:case Scalar.BLOCK_LITERAL:return implicitKey||inFlow?quotedString(ss.value,ctx):blockString(ss,ctx,onComment,onChompKeep);case Scalar.QUOTE_DOUBLE:return doubleQuotedString(ss.value,ctx);case Scalar.QUOTE_SINGLE:return singleQuotedString(ss.value,ctx);case Scalar.PLAIN:return function(item,ctx,onComment,onChompKeep){const{type:type,value:value}=item,{actualString:actualString,implicitKey:implicitKey,indent:indent,indentStep:indentStep,inFlow:inFlow}=ctx;if(implicitKey&&value.includes("\n")||inFlow&&/[[\]{},]/.test(value))return quotedString(value,ctx);if(!value||/^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(value))return implicitKey||inFlow||!value.includes("\n")?quotedString(value,ctx):blockString(item,ctx,onComment,onChompKeep);if(!implicitKey&&!inFlow&&type!==Scalar.PLAIN&&value.includes("\n"))return blockString(item,ctx,onComment,onChompKeep);if(containsDocumentMarker(value)){if(""===indent)return ctx.forceBlockIndent=!0,blockString(item,ctx,onComment,onChompKeep);if(implicitKey&&indent===indentStep)return quotedString(value,ctx)}const str=value.replace(/\n+/g,`$&\n${indent}`);if(actualString){const test=tag=>tag.default&&"tag:yaml.org,2002:str"!==tag.tag&&tag.test?.test(str),{compat:compat,tags:tags}=ctx.doc.schema;if(tags.some(test)||compat?.some(test))return quotedString(value,ctx)}return implicitKey?str:foldFlowLines(str,indent,FOLD_FLOW,getFoldOptions(ctx,!1))}(ss,ctx,onComment,onChompKeep);default:return null}};let res=_stringify(type);if(null===res){const{defaultKeyType:defaultKeyType,defaultStringType:defaultStringType}=ctx.options,t=implicitKey&&defaultKeyType||defaultStringType;if(res=_stringify(t),null===res)throw new Error(`Unsupported default string type ${t}`)}return res}function createStringifyContext(doc,options){const opt=Object.assign({blockQuote:!0,commentString:stringifyComment,defaultKeyType:null,defaultStringType:"PLAIN",directives:null,doubleQuotedAsJSON:!1,doubleQuotedMinMultiLineLength:40,falseStr:"false",flowCollectionPadding:!0,indentSeq:!0,lineWidth:80,minContentWidth:20,nullStr:"null",simpleKeys:!1,singleQuote:null,trueStr:"true",verifyAliasOrder:!0},doc.schema.toStringOptions,options);let inFlow;switch(opt.collectionStyle){case"block":inFlow=!1;break;case"flow":inFlow=!0;break;default:inFlow=null}return{anchors:new Set,doc:doc,flowCollectionPadding:opt.flowCollectionPadding?" ":"",indent:"",indentStep:"number"==typeof opt.indent?" ".repeat(opt.indent):"  ",inFlow:inFlow,options:opt}}function stringify$2(item,ctx,onComment,onChompKeep){if(isPair(item))return item.toString(ctx,onComment,onChompKeep);if(isAlias(item)){if(ctx.doc.directives)return item.toString(ctx);if(ctx.resolvedAliases?.has(item))throw new TypeError("Cannot stringify circular structure without alias nodes");ctx.resolvedAliases?ctx.resolvedAliases.add(item):ctx.resolvedAliases=new Set([item]),item=item.resolve(ctx.doc)}let tagObj;const node=isNode(item)?item:ctx.doc.createNode(item,{onTagObj:o=>tagObj=o});tagObj||(tagObj=function(tags,item){if(item.tag){const match=tags.filter((t=>t.tag===item.tag));if(match.length>0)return match.find((t=>t.format===item.format))??match[0]}let tagObj,obj;if(isScalar$1(item)){obj=item.value;const match=tags.filter((t=>t.identify?.(obj)));tagObj=match.find((t=>t.format===item.format))??match.find((t=>!t.format))}else obj=item,tagObj=tags.find((t=>t.nodeClass&&obj instanceof t.nodeClass));if(!tagObj)throw new Error(`Tag not resolved for ${obj?.constructor?.name??typeof obj} value`);return tagObj}(ctx.doc.schema.tags,node));const props=function(node,tagObj,{anchors:anchors,doc:doc}){if(!doc.directives)return"";const props=[],anchor=(isScalar$1(node)||isCollection$1(node))&&node.anchor;anchor&&anchorIsValid(anchor)&&(anchors.add(anchor),props.push(`&${anchor}`));const tag=node.tag?node.tag:tagObj.default?null:tagObj.tag;return tag&&props.push(doc.directives.tagString(tag)),props.join(" ")}(node,tagObj,ctx);props.length>0&&(ctx.indentAtStart=(ctx.indentAtStart??0)+props.length+1);const str="function"==typeof tagObj.stringify?tagObj.stringify(node,ctx,onComment,onChompKeep):isScalar$1(node)?stringifyString(node,ctx,onComment,onChompKeep):node.toString(ctx,onComment,onChompKeep);return props?isScalar$1(node)||"{"===str[0]||"["===str[0]?`${props} ${str}`:`${props}\n${ctx.indent}${str}`:str}function warn(logLevel,warning){"debug"!==logLevel&&"warn"!==logLevel||("undefined"!=typeof process&&process.emitWarning?process.emitWarning(warning):console.warn(warning))}function addPairToJSMap(ctx,map,{key:key,value:value}){if(ctx?.doc.schema.merge&&isMergeKey(key))if(value=isAlias(value)?value.resolve(ctx.doc):value,isSeq(value))for(const it of value.items)mergeToJSMap(ctx,map,it);else if(Array.isArray(value))for(const it of value)mergeToJSMap(ctx,map,it);else mergeToJSMap(ctx,map,value);else{const jsKey=toJS(key,"",ctx);if(map instanceof Map)map.set(jsKey,toJS(value,jsKey,ctx));else if(map instanceof Set)map.add(jsKey);else{const stringKey=function(key,jsKey,ctx){if(null===jsKey)return"";if("object"!=typeof jsKey)return String(jsKey);if(isNode(key)&&ctx?.doc){const strCtx=createStringifyContext(ctx.doc,{});strCtx.anchors=new Set;for(const node of ctx.anchors.keys())strCtx.anchors.add(node.anchor);strCtx.inFlow=!0,strCtx.inStringifyKey=!0;const strKey=key.toString(strCtx);if(!ctx.mapKeyWarned){let jsonStr=JSON.stringify(strKey);jsonStr.length>40&&(jsonStr=jsonStr.substring(0,36)+'..."'),warn(ctx.doc.options.logLevel,`Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`),ctx.mapKeyWarned=!0}return strKey}return JSON.stringify(jsKey)}(key,jsKey,ctx),jsValue=toJS(value,stringKey,ctx);stringKey in map?Object.defineProperty(map,stringKey,{value:jsValue,writable:!0,enumerable:!0,configurable:!0}):map[stringKey]=jsValue}}return map}const isMergeKey=key=>"<<"===key||isScalar$1(key)&&"<<"===key.value&&(!key.type||key.type===Scalar.PLAIN);function mergeToJSMap(ctx,map,value){const source=ctx&&isAlias(value)?value.resolve(ctx.doc):value;if(!isMap(source))throw new Error("Merge sources must be maps or map aliases");const srcMap=source.toJSON(null,ctx,Map);for(const[key,value]of srcMap)map instanceof Map?map.has(key)||map.set(key,value):map instanceof Set?map.add(key):Object.prototype.hasOwnProperty.call(map,key)||Object.defineProperty(map,key,{value:value,writable:!0,enumerable:!0,configurable:!0});return map}function createPair(key,value,ctx){const k=createNode(key,void 0,ctx),v=createNode(value,void 0,ctx);return new Pair(k,v)}class Pair{constructor(key,value=null){Object.defineProperty(this,NODE_TYPE,{value:PAIR}),this.key=key,this.value=value}clone(schema){let{key:key,value:value}=this;return isNode(key)&&(key=key.clone(schema)),isNode(value)&&(value=value.clone(schema)),new Pair(key,value)}toJSON(_,ctx){return addPairToJSMap(ctx,ctx?.mapAsMap?new Map:{},this)}toString(ctx,onComment,onChompKeep){return ctx?.doc?function({key:key,value:value},ctx,onComment,onChompKeep){const{allNullValues:allNullValues,doc:doc,indent:indent,indentStep:indentStep,options:{commentString:commentString,indentSeq:indentSeq,simpleKeys:simpleKeys}}=ctx;let keyComment=isNode(key)&&key.comment||null;if(simpleKeys){if(keyComment)throw new Error("With simple keys, key nodes cannot have comments");if(isCollection$1(key))throw new Error("With simple keys, collection cannot be used as a key value")}let explicitKey=!simpleKeys&&(!key||keyComment&&null==value&&!ctx.inFlow||isCollection$1(key)||(isScalar$1(key)?key.type===Scalar.BLOCK_FOLDED||key.type===Scalar.BLOCK_LITERAL:"object"==typeof key));ctx=Object.assign({},ctx,{allNullValues:!1,implicitKey:!explicitKey&&(simpleKeys||!allNullValues),indent:indent+indentStep});let vsb,vcb,valueComment,keyCommentDone=!1,chompKeep=!1,str=stringify$2(key,ctx,(()=>keyCommentDone=!0),(()=>chompKeep=!0));if(!explicitKey&&!ctx.inFlow&&str.length>1024){if(simpleKeys)throw new Error("With simple keys, single line scalar must not span more than 1024 characters");explicitKey=!0}if(ctx.inFlow){if(allNullValues||null==value)return keyCommentDone&&onComment&&onComment(),""===str?"?":explicitKey?`? ${str}`:str}else if(allNullValues&&!simpleKeys||null==value&&explicitKey)return str=`? ${str}`,keyComment&&!keyCommentDone?str+=lineComment(str,ctx.indent,commentString(keyComment)):chompKeep&&onChompKeep&&onChompKeep(),str;keyCommentDone&&(keyComment=null),explicitKey?(keyComment&&(str+=lineComment(str,ctx.indent,commentString(keyComment))),str=`? ${str}\n${indent}:`):(str=`${str}:`,keyComment&&(str+=lineComment(str,ctx.indent,commentString(keyComment)))),isNode(value)?(vsb=!!value.spaceBefore,vcb=value.commentBefore,valueComment=value.comment):(vsb=!1,vcb=null,valueComment=null,value&&"object"==typeof value&&(value=doc.createNode(value))),ctx.implicitKey=!1,explicitKey||keyComment||!isScalar$1(value)||(ctx.indentAtStart=str.length+1),chompKeep=!1,indentSeq||!(indentStep.length>=2)||ctx.inFlow||explicitKey||!isSeq(value)||value.flow||value.tag||value.anchor||(ctx.indent=ctx.indent.substring(2));let valueCommentDone=!1;const valueStr=stringify$2(value,ctx,(()=>valueCommentDone=!0),(()=>chompKeep=!0));let ws=" ";if(keyComment||vsb||vcb)ws=vsb?"\n":"",vcb&&(ws+=`\n${indentComment(commentString(vcb),ctx.indent)}`),""!==valueStr||ctx.inFlow?ws+=`\n${ctx.indent}`:"\n"===ws&&(ws="\n\n");else if(!explicitKey&&isCollection$1(value)){const vs0=valueStr[0],nl0=valueStr.indexOf("\n"),hasNewline=-1!==nl0,flow=ctx.inFlow??value.flow??0===value.items.length;if(hasNewline||!flow){let hasPropsLine=!1;if(hasNewline&&("&"===vs0||"!"===vs0)){let sp0=valueStr.indexOf(" ");"&"===vs0&&-1!==sp0&&sp0<nl0&&"!"===valueStr[sp0+1]&&(sp0=valueStr.indexOf(" ",sp0+1)),(-1===sp0||nl0<sp0)&&(hasPropsLine=!0)}hasPropsLine||(ws=`\n${ctx.indent}`)}}else""!==valueStr&&"\n"!==valueStr[0]||(ws="");return str+=ws+valueStr,ctx.inFlow?valueCommentDone&&onComment&&onComment():valueComment&&!valueCommentDone?str+=lineComment(str,ctx.indent,commentString(valueComment)):chompKeep&&onChompKeep&&onChompKeep(),str}(this,ctx,onComment,onChompKeep):JSON.stringify(this)}}function stringifyCollection(collection,ctx,options){return(ctx.inFlow??collection.flow?stringifyFlowCollection:stringifyBlockCollection)(collection,ctx,options)}function stringifyBlockCollection({comment:comment,items:items},ctx,{blockItemPrefix:blockItemPrefix,flowChars:flowChars,itemIndent:itemIndent,onChompKeep:onChompKeep,onComment:onComment}){const{indent:indent,options:{commentString:commentString}}=ctx,itemCtx=Object.assign({},ctx,{indent:itemIndent,type:null});let chompKeep=!1;const lines=[];for(let i=0;i<items.length;++i){const item=items[i];let comment=null;if(isNode(item))!chompKeep&&item.spaceBefore&&lines.push(""),addCommentBefore(ctx,lines,item.commentBefore,chompKeep),item.comment&&(comment=item.comment);else if(isPair(item)){const ik=isNode(item.key)?item.key:null;ik&&(!chompKeep&&ik.spaceBefore&&lines.push(""),addCommentBefore(ctx,lines,ik.commentBefore,chompKeep))}chompKeep=!1;let str=stringify$2(item,itemCtx,(()=>comment=null),(()=>chompKeep=!0));comment&&(str+=lineComment(str,itemIndent,commentString(comment))),chompKeep&&comment&&(chompKeep=!1),lines.push(blockItemPrefix+str)}let str;if(0===lines.length)str=flowChars.start+flowChars.end;else{str=lines[0];for(let i=1;i<lines.length;++i){const line=lines[i];str+=line?`\n${indent}${line}`:"\n"}}return comment?(str+="\n"+indentComment(commentString(comment),indent),onComment&&onComment()):chompKeep&&onChompKeep&&onChompKeep(),str}function stringifyFlowCollection({comment:comment,items:items},ctx,{flowChars:flowChars,itemIndent:itemIndent,onComment:onComment}){const{indent:indent,indentStep:indentStep,flowCollectionPadding:fcPadding,options:{commentString:commentString}}=ctx;itemIndent+=indentStep;const itemCtx=Object.assign({},ctx,{indent:itemIndent,inFlow:!0,type:null});let reqNewline=!1,linesAtValue=0;const lines=[];for(let i=0;i<items.length;++i){const item=items[i];let comment=null;if(isNode(item))item.spaceBefore&&lines.push(""),addCommentBefore(ctx,lines,item.commentBefore,!1),item.comment&&(comment=item.comment);else if(isPair(item)){const ik=isNode(item.key)?item.key:null;ik&&(ik.spaceBefore&&lines.push(""),addCommentBefore(ctx,lines,ik.commentBefore,!1),ik.comment&&(reqNewline=!0));const iv=isNode(item.value)?item.value:null;iv?(iv.comment&&(comment=iv.comment),iv.commentBefore&&(reqNewline=!0)):null==item.value&&ik?.comment&&(comment=ik.comment)}comment&&(reqNewline=!0);let str=stringify$2(item,itemCtx,(()=>comment=null));i<items.length-1&&(str+=","),comment&&(str+=lineComment(str,itemIndent,commentString(comment))),!reqNewline&&(lines.length>linesAtValue||str.includes("\n"))&&(reqNewline=!0),lines.push(str),linesAtValue=lines.length}let str;const{start:start,end:end}=flowChars;if(0===lines.length)str=start+end;else{if(!reqNewline){reqNewline=lines.reduce(((sum,line)=>sum+line.length+2),2)>Collection.maxFlowStringSingleLineLength}if(reqNewline){str=start;for(const line of lines)str+=line?`\n${indentStep}${indent}${line}`:"\n";str+=`\n${indent}${end}`}else str=`${start}${fcPadding}${lines.join(" ")}${fcPadding}${end}`}return comment&&(str+=lineComment(str,indent,commentString(comment)),onComment&&onComment()),str}function addCommentBefore({indent:indent,options:{commentString:commentString}},lines,comment,chompKeep){if(comment&&chompKeep&&(comment=comment.replace(/^\n+/,"")),comment){const ic=indentComment(commentString(comment),indent);lines.push(ic.trimStart())}}function findPair(items,key){const k=isScalar$1(key)?key.value:key;for(const it of items)if(isPair(it)){if(it.key===key||it.key===k)return it;if(isScalar$1(it.key)&&it.key.value===k)return it}}class YAMLMap extends Collection{static get tagName(){return"tag:yaml.org,2002:map"}constructor(schema){super(MAP,schema),this.items=[]}static from(schema,obj,ctx){const{keepUndefined:keepUndefined,replacer:replacer}=ctx,map=new this(schema),add=(key,value)=>{if("function"==typeof replacer)value=replacer.call(obj,key,value);else if(Array.isArray(replacer)&&!replacer.includes(key))return;(void 0!==value||keepUndefined)&&map.items.push(createPair(key,value,ctx))};if(obj instanceof Map)for(const[key,value]of obj)add(key,value);else if(obj&&"object"==typeof obj)for(const key of Object.keys(obj))add(key,obj[key]);return"function"==typeof schema.sortMapEntries&&map.items.sort(schema.sortMapEntries),map}add(pair,overwrite){let _pair;_pair=isPair(pair)?pair:pair&&"object"==typeof pair&&"key"in pair?new Pair(pair.key,pair.value):new Pair(pair,pair?.value);const prev=findPair(this.items,_pair.key),sortEntries=this.schema?.sortMapEntries;if(prev){if(!overwrite)throw new Error(`Key ${_pair.key} already set`);isScalar$1(prev.value)&&isScalarValue(_pair.value)?prev.value.value=_pair.value:prev.value=_pair.value}else if(sortEntries){const i=this.items.findIndex((item=>sortEntries(_pair,item)<0));-1===i?this.items.push(_pair):this.items.splice(i,0,_pair)}else this.items.push(_pair)}delete(key){const it=findPair(this.items,key);if(!it)return!1;return this.items.splice(this.items.indexOf(it),1).length>0}get(key,keepScalar){const it=findPair(this.items,key),node=it?.value;return(!keepScalar&&isScalar$1(node)?node.value:node)??void 0}has(key){return!!findPair(this.items,key)}set(key,value){this.add(new Pair(key,value),!0)}toJSON(_,ctx,Type){const map=Type?new Type:ctx?.mapAsMap?new Map:{};ctx?.onCreate&&ctx.onCreate(map);for(const item of this.items)addPairToJSMap(ctx,map,item);return map}toString(ctx,onComment,onChompKeep){if(!ctx)return JSON.stringify(this);for(const item of this.items)if(!isPair(item))throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);return!ctx.allNullValues&&this.hasAllNullValues(!1)&&(ctx=Object.assign({},ctx,{allNullValues:!0})),stringifyCollection(this,ctx,{blockItemPrefix:"",flowChars:{start:"{",end:"}"},itemIndent:ctx.indent||"",onChompKeep:onChompKeep,onComment:onComment})}}const map={collection:"map",default:!0,nodeClass:YAMLMap,tag:"tag:yaml.org,2002:map",resolve:(map,onError)=>(isMap(map)||onError("Expected a mapping for this tag"),map),createNode:(schema,obj,ctx)=>YAMLMap.from(schema,obj,ctx)};class YAMLSeq extends Collection{static get tagName(){return"tag:yaml.org,2002:seq"}constructor(schema){super(SEQ,schema),this.items=[]}add(value){this.items.push(value)}delete(key){const idx=asItemIndex(key);if("number"!=typeof idx)return!1;return this.items.splice(idx,1).length>0}get(key,keepScalar){const idx=asItemIndex(key);if("number"!=typeof idx)return;const it=this.items[idx];return!keepScalar&&isScalar$1(it)?it.value:it}has(key){const idx=asItemIndex(key);return"number"==typeof idx&&idx<this.items.length}set(key,value){const idx=asItemIndex(key);if("number"!=typeof idx)throw new Error(`Expected a valid index, not ${key}.`);const prev=this.items[idx];isScalar$1(prev)&&isScalarValue(value)?prev.value=value:this.items[idx]=value}toJSON(_,ctx){const seq=[];ctx?.onCreate&&ctx.onCreate(seq);let i=0;for(const item of this.items)seq.push(toJS(item,String(i++),ctx));return seq}toString(ctx,onComment,onChompKeep){return ctx?stringifyCollection(this,ctx,{blockItemPrefix:"- ",flowChars:{start:"[",end:"]"},itemIndent:(ctx.indent||"")+"  ",onChompKeep:onChompKeep,onComment:onComment}):JSON.stringify(this)}static from(schema,obj,ctx){const{replacer:replacer}=ctx,seq=new this(schema);if(obj&&Symbol.iterator in Object(obj)){let i=0;for(let it of obj){if("function"==typeof replacer){const key=obj instanceof Set?it:String(i++);it=replacer.call(obj,key,it)}seq.items.push(createNode(it,void 0,ctx))}}return seq}}function asItemIndex(key){let idx=isScalar$1(key)?key.value:key;return idx&&"string"==typeof idx&&(idx=Number(idx)),"number"==typeof idx&&Number.isInteger(idx)&&idx>=0?idx:null}const seq={collection:"seq",default:!0,nodeClass:YAMLSeq,tag:"tag:yaml.org,2002:seq",resolve:(seq,onError)=>(isSeq(seq)||onError("Expected a sequence for this tag"),seq),createNode:(schema,obj,ctx)=>YAMLSeq.from(schema,obj,ctx)},string={identify:value=>"string"==typeof value,default:!0,tag:"tag:yaml.org,2002:str",resolve:str=>str,stringify:(item,ctx,onComment,onChompKeep)=>stringifyString(item,ctx=Object.assign({actualString:!0},ctx),onComment,onChompKeep)},nullTag={identify:value=>null==value,createNode:()=>new Scalar(null),default:!0,tag:"tag:yaml.org,2002:null",test:/^(?:~|[Nn]ull|NULL)?$/,resolve:()=>new Scalar(null),stringify:({source:source},ctx)=>"string"==typeof source&&nullTag.test.test(source)?source:ctx.options.nullStr},boolTag={identify:value=>"boolean"==typeof value,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,resolve:str=>new Scalar("t"===str[0]||"T"===str[0]),stringify({source:source,value:value},ctx){if(source&&boolTag.test.test(source)){if(value===("t"===source[0]||"T"===source[0]))return source}return value?ctx.options.trueStr:ctx.options.falseStr}};function stringifyNumber({format:format,minFractionDigits:minFractionDigits,tag:tag,value:value}){if("bigint"==typeof value)return String(value);const num="number"==typeof value?value:Number(value);if(!isFinite(num))return isNaN(num)?".nan":num<0?"-.inf":".inf";let n=JSON.stringify(value);if(!format&&minFractionDigits&&(!tag||"tag:yaml.org,2002:float"===tag)&&/^\d/.test(n)){let i=n.indexOf(".");i<0&&(i=n.length,n+=".");let d=minFractionDigits-(n.length-i-1);for(;d-- >0;)n+="0"}return n}const floatNaN$1={identify:value=>"number"==typeof value,default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.(?:inf|Inf|INF|nan|NaN|NAN))$/,resolve:str=>"nan"===str.slice(-3).toLowerCase()?NaN:"-"===str[0]?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:stringifyNumber},floatExp$1={identify:value=>"number"==typeof value,default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)[eE][-+]?[0-9]+$/,resolve:str=>parseFloat(str),stringify(node){const num=Number(node.value);return isFinite(num)?num.toExponential():stringifyNumber(node)}},float$1={identify:value=>"number"==typeof value,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:\.[0-9]+|[0-9]+\.[0-9]*)$/,resolve(str){const node=new Scalar(parseFloat(str)),dot=str.indexOf(".");return-1!==dot&&"0"===str[str.length-1]&&(node.minFractionDigits=str.length-dot-1),node},stringify:stringifyNumber},intIdentify$2=value=>"bigint"==typeof value||Number.isInteger(value),intResolve$1=(str,offset,radix,{intAsBigInt:intAsBigInt})=>intAsBigInt?BigInt(str):parseInt(str.substring(offset),radix);function intStringify$1(node,radix,prefix){const{value:value}=node;return intIdentify$2(value)&&value>=0?prefix+value.toString(radix):stringifyNumber(node)}const intOct$1={identify:value=>intIdentify$2(value)&&value>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^0o[0-7]+$/,resolve:(str,_onError,opt)=>intResolve$1(str,2,8,opt),stringify:node=>intStringify$1(node,8,"0o")},int$1={identify:intIdentify$2,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9]+$/,resolve:(str,_onError,opt)=>intResolve$1(str,0,10,opt),stringify:stringifyNumber},intHex$1={identify:value=>intIdentify$2(value)&&value>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^0x[0-9a-fA-F]+$/,resolve:(str,_onError,opt)=>intResolve$1(str,2,16,opt),stringify:node=>intStringify$1(node,16,"0x")},schema$2=[map,seq,string,nullTag,boolTag,intOct$1,int$1,intHex$1,floatNaN$1,floatExp$1,float$1];function intIdentify$1(value){return"bigint"==typeof value||Number.isInteger(value)}const stringifyJSON=({value:value})=>JSON.stringify(value),schema$1=[map,seq].concat([{identify:value=>"string"==typeof value,default:!0,tag:"tag:yaml.org,2002:str",resolve:str=>str,stringify:stringifyJSON},{identify:value=>null==value,createNode:()=>new Scalar(null),default:!0,tag:"tag:yaml.org,2002:null",test:/^null$/,resolve:()=>null,stringify:stringifyJSON},{identify:value=>"boolean"==typeof value,default:!0,tag:"tag:yaml.org,2002:bool",test:/^true|false$/,resolve:str=>"true"===str,stringify:stringifyJSON},{identify:intIdentify$1,default:!0,tag:"tag:yaml.org,2002:int",test:/^-?(?:0|[1-9][0-9]*)$/,resolve:(str,_onError,{intAsBigInt:intAsBigInt})=>intAsBigInt?BigInt(str):parseInt(str,10),stringify:({value:value})=>intIdentify$1(value)?value.toString():JSON.stringify(value)},{identify:value=>"number"==typeof value,default:!0,tag:"tag:yaml.org,2002:float",test:/^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,resolve:str=>parseFloat(str),stringify:stringifyJSON}],{default:!0,tag:"",test:/^/,resolve:(str,onError)=>(onError(`Unresolved plain scalar ${JSON.stringify(str)}`),str)}),binary={identify:value=>value instanceof Uint8Array,default:!1,tag:"tag:yaml.org,2002:binary",resolve(src,onError){if("function"==typeof Buffer)return Buffer.from(src,"base64");if("function"==typeof atob){const str=atob(src.replace(/[\n\r]/g,"")),buffer=new Uint8Array(str.length);for(let i=0;i<str.length;++i)buffer[i]=str.charCodeAt(i);return buffer}return onError("This environment does not support reading binary tags; either Buffer or atob is required"),src},stringify({comment:comment,type:type,value:value},ctx,onComment,onChompKeep){const buf=value;let str;if("function"==typeof Buffer)str=buf instanceof Buffer?buf.toString("base64"):Buffer.from(buf.buffer).toString("base64");else{if("function"!=typeof btoa)throw new Error("This environment does not support writing binary tags; either Buffer or btoa is required");{let s="";for(let i=0;i<buf.length;++i)s+=String.fromCharCode(buf[i]);str=btoa(s)}}if(type||(type=Scalar.BLOCK_LITERAL),type!==Scalar.QUOTE_DOUBLE){const lineWidth=Math.max(ctx.options.lineWidth-ctx.indent.length,ctx.options.minContentWidth),n=Math.ceil(str.length/lineWidth),lines=new Array(n);for(let i=0,o=0;i<n;++i,o+=lineWidth)lines[i]=str.substr(o,lineWidth);str=lines.join(type===Scalar.BLOCK_LITERAL?"\n":" ")}return stringifyString({comment:comment,type:type,value:str},ctx,onComment,onChompKeep)}};function resolvePairs(seq,onError){if(isSeq(seq))for(let i=0;i<seq.items.length;++i){let item=seq.items[i];if(!isPair(item)){if(isMap(item)){item.items.length>1&&onError("Each pair must have its own sequence indicator");const pair=item.items[0]||new Pair(new Scalar(null));if(item.commentBefore&&(pair.key.commentBefore=pair.key.commentBefore?`${item.commentBefore}\n${pair.key.commentBefore}`:item.commentBefore),item.comment){const cn=pair.value??pair.key;cn.comment=cn.comment?`${item.comment}\n${cn.comment}`:item.comment}item=pair}seq.items[i]=isPair(item)?item:new Pair(item)}}else onError("Expected a sequence for this tag");return seq}function createPairs(schema,iterable,ctx){const{replacer:replacer}=ctx,pairs=new YAMLSeq(schema);pairs.tag="tag:yaml.org,2002:pairs";let i=0;if(iterable&&Symbol.iterator in Object(iterable))for(let it of iterable){let key,value;if("function"==typeof replacer&&(it=replacer.call(iterable,String(i++),it)),Array.isArray(it)){if(2!==it.length)throw new TypeError(`Expected [key, value] tuple: ${it}`);key=it[0],value=it[1]}else if(it&&it instanceof Object){const keys=Object.keys(it);if(1!==keys.length)throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);key=keys[0],value=it[key]}else key=it;pairs.items.push(createPair(key,value,ctx))}return pairs}const pairs={collection:"seq",default:!1,tag:"tag:yaml.org,2002:pairs",resolve:resolvePairs,createNode:createPairs};class YAMLOMap extends YAMLSeq{constructor(){super(),this.add=YAMLMap.prototype.add.bind(this),this.delete=YAMLMap.prototype.delete.bind(this),this.get=YAMLMap.prototype.get.bind(this),this.has=YAMLMap.prototype.has.bind(this),this.set=YAMLMap.prototype.set.bind(this),this.tag=YAMLOMap.tag}toJSON(_,ctx){if(!ctx)return super.toJSON(_);const map=new Map;ctx?.onCreate&&ctx.onCreate(map);for(const pair of this.items){let key,value;if(isPair(pair)?(key=toJS(pair.key,"",ctx),value=toJS(pair.value,key,ctx)):key=toJS(pair,"",ctx),map.has(key))throw new Error("Ordered maps must not include duplicate keys");map.set(key,value)}return map}static from(schema,iterable,ctx){const pairs=createPairs(schema,iterable,ctx),omap=new this;return omap.items=pairs.items,omap}}YAMLOMap.tag="tag:yaml.org,2002:omap";const omap={collection:"seq",identify:value=>value instanceof Map,nodeClass:YAMLOMap,default:!1,tag:"tag:yaml.org,2002:omap",resolve(seq,onError){const pairs=resolvePairs(seq,onError),seenKeys=[];for(const{key:key}of pairs.items)isScalar$1(key)&&(seenKeys.includes(key.value)?onError(`Ordered maps must not include duplicate keys: ${key.value}`):seenKeys.push(key.value));return Object.assign(new YAMLOMap,pairs)},createNode:(schema,iterable,ctx)=>YAMLOMap.from(schema,iterable,ctx)};function boolStringify({value:value,source:source},ctx){return source&&(value?trueTag:falseTag).test.test(source)?source:value?ctx.options.trueStr:ctx.options.falseStr}const trueTag={identify:value=>!0===value,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,resolve:()=>new Scalar(!0),stringify:boolStringify},falseTag={identify:value=>!1===value,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,resolve:()=>new Scalar(!1),stringify:boolStringify},floatNaN={identify:value=>"number"==typeof value,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?\.(?:inf|Inf|INF|nan|NaN|NAN)$/,resolve:str=>"nan"===str.slice(-3).toLowerCase()?NaN:"-"===str[0]?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:stringifyNumber},floatExp={identify:value=>"number"==typeof value,default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:[0-9][0-9_]*)?(?:\.[0-9_]*)?[eE][-+]?[0-9]+$/,resolve:str=>parseFloat(str.replace(/_/g,"")),stringify(node){const num=Number(node.value);return isFinite(num)?num.toExponential():stringifyNumber(node)}},float={identify:value=>"number"==typeof value,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:[0-9][0-9_]*)?\.[0-9_]*$/,resolve(str){const node=new Scalar(parseFloat(str.replace(/_/g,""))),dot=str.indexOf(".");if(-1!==dot){const f=str.substring(dot+1).replace(/_/g,"");"0"===f[f.length-1]&&(node.minFractionDigits=f.length)}return node},stringify:stringifyNumber},intIdentify=value=>"bigint"==typeof value||Number.isInteger(value);function intResolve(str,offset,radix,{intAsBigInt:intAsBigInt}){const sign=str[0];if("-"!==sign&&"+"!==sign||(offset+=1),str=str.substring(offset).replace(/_/g,""),intAsBigInt){switch(radix){case 2:str=`0b${str}`;break;case 8:str=`0o${str}`;break;case 16:str=`0x${str}`}const n=BigInt(str);return"-"===sign?BigInt(-1)*n:n}const n=parseInt(str,radix);return"-"===sign?-1*n:n}function intStringify(node,radix,prefix){const{value:value}=node;if(intIdentify(value)){const str=value.toString(radix);return value<0?"-"+prefix+str.substr(1):prefix+str}return stringifyNumber(node)}const intBin={identify:intIdentify,default:!0,tag:"tag:yaml.org,2002:int",format:"BIN",test:/^[-+]?0b[0-1_]+$/,resolve:(str,_onError,opt)=>intResolve(str,2,2,opt),stringify:node=>intStringify(node,2,"0b")},intOct={identify:intIdentify,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^[-+]?0[0-7_]+$/,resolve:(str,_onError,opt)=>intResolve(str,1,8,opt),stringify:node=>intStringify(node,8,"0")},int={identify:intIdentify,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9][0-9_]*$/,resolve:(str,_onError,opt)=>intResolve(str,0,10,opt),stringify:stringifyNumber},intHex={identify:intIdentify,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^[-+]?0x[0-9a-fA-F_]+$/,resolve:(str,_onError,opt)=>intResolve(str,2,16,opt),stringify:node=>intStringify(node,16,"0x")};class YAMLSet extends YAMLMap{constructor(schema){super(schema),this.tag=YAMLSet.tag}add(key){let pair;pair=isPair(key)?key:key&&"object"==typeof key&&"key"in key&&"value"in key&&null===key.value?new Pair(key.key,null):new Pair(key,null);findPair(this.items,pair.key)||this.items.push(pair)}get(key,keepPair){const pair=findPair(this.items,key);return!keepPair&&isPair(pair)?isScalar$1(pair.key)?pair.key.value:pair.key:pair}set(key,value){if("boolean"!=typeof value)throw new Error("Expected boolean value for set(key, value) in a YAML set, not "+typeof value);const prev=findPair(this.items,key);prev&&!value?this.items.splice(this.items.indexOf(prev),1):!prev&&value&&this.items.push(new Pair(key))}toJSON(_,ctx){return super.toJSON(_,ctx,Set)}toString(ctx,onComment,onChompKeep){if(!ctx)return JSON.stringify(this);if(this.hasAllNullValues(!0))return super.toString(Object.assign({},ctx,{allNullValues:!0}),onComment,onChompKeep);throw new Error("Set items must all have null values")}static from(schema,iterable,ctx){const{replacer:replacer}=ctx,set=new this(schema);if(iterable&&Symbol.iterator in Object(iterable))for(let value of iterable)"function"==typeof replacer&&(value=replacer.call(iterable,value,value)),set.items.push(createPair(value,null,ctx));return set}}YAMLSet.tag="tag:yaml.org,2002:set";const set={collection:"map",identify:value=>value instanceof Set,nodeClass:YAMLSet,default:!1,tag:"tag:yaml.org,2002:set",createNode:(schema,iterable,ctx)=>YAMLSet.from(schema,iterable,ctx),resolve(map,onError){if(isMap(map)){if(map.hasAllNullValues(!0))return Object.assign(new YAMLSet,map);onError("Set items must all have null values")}else onError("Expected a mapping for this tag");return map}};function parseSexagesimal(str,asBigInt){const sign=str[0],parts="-"===sign||"+"===sign?str.substring(1):str,num=n=>asBigInt?BigInt(n):Number(n),res=parts.replace(/_/g,"").split(":").reduce(((res,p)=>res*num(60)+num(p)),num(0));return"-"===sign?num(-1)*res:res}function stringifySexagesimal(node){let{value:value}=node,num=n=>n;if("bigint"==typeof value)num=n=>BigInt(n);else if(isNaN(value)||!isFinite(value))return stringifyNumber(node);let sign="";value<0&&(sign="-",value*=num(-1));const _60=num(60),parts=[value%_60];return value<60?parts.unshift(0):(value=(value-parts[0])/_60,parts.unshift(value%_60),value>=60&&(value=(value-parts[0])/_60,parts.unshift(value))),sign+parts.map((n=>String(n).padStart(2,"0"))).join(":").replace(/000000\d*$/,"")}const intTime={identify:value=>"bigint"==typeof value||Number.isInteger(value),default:!0,tag:"tag:yaml.org,2002:int",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,resolve:(str,_onError,{intAsBigInt:intAsBigInt})=>parseSexagesimal(str,intAsBigInt),stringify:stringifySexagesimal},floatTime={identify:value=>"number"==typeof value,default:!0,tag:"tag:yaml.org,2002:float",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*$/,resolve:str=>parseSexagesimal(str,!1),stringify:stringifySexagesimal},timestamp={identify:value=>value instanceof Date,default:!0,tag:"tag:yaml.org,2002:timestamp",test:RegExp("^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?$"),resolve(str){const match=str.match(timestamp.test);if(!match)throw new Error("!!timestamp expects a date, starting with yyyy-mm-dd");const[,year,month,day,hour,minute,second]=match.map(Number),millisec=match[7]?Number((match[7]+"00").substr(1,3)):0;let date=Date.UTC(year,month-1,day,hour||0,minute||0,second||0,millisec);const tz=match[8];if(tz&&"Z"!==tz){let d=parseSexagesimal(tz,!1);Math.abs(d)<30&&(d*=60),date-=6e4*d}return new Date(date)},stringify:({value:value})=>value.toISOString().replace(/((T00:00)?:00)?\.000Z$/,"")},schema=[map,seq,string,nullTag,trueTag,falseTag,intBin,intOct,int,intHex,floatNaN,floatExp,float,binary,omap,pairs,set,intTime,floatTime,timestamp],schemas=new Map([["core",schema$2],["failsafe",[map,seq,string]],["json",schema$1],["yaml11",schema],["yaml-1.1",schema]]),tagsByName={binary:binary,bool:boolTag,float:float$1,floatExp:floatExp$1,floatNaN:floatNaN$1,floatTime:floatTime,int:int$1,intHex:intHex$1,intOct:intOct$1,intTime:intTime,map:map,null:nullTag,omap:omap,pairs:pairs,seq:seq,set:set,timestamp:timestamp},coreKnownTags={"tag:yaml.org,2002:binary":binary,"tag:yaml.org,2002:omap":omap,"tag:yaml.org,2002:pairs":pairs,"tag:yaml.org,2002:set":set,"tag:yaml.org,2002:timestamp":timestamp};function getTags(customTags,schemaName){let tags=schemas.get(schemaName);if(!tags){if(!Array.isArray(customTags)){const keys=Array.from(schemas.keys()).filter((key=>"yaml11"!==key)).map((key=>JSON.stringify(key))).join(", ");throw new Error(`Unknown schema "${schemaName}"; use one of ${keys} or define customTags array`)}tags=[]}if(Array.isArray(customTags))for(const tag of customTags)tags=tags.concat(tag);else"function"==typeof customTags&&(tags=customTags(tags.slice()));return tags.map((tag=>{if("string"!=typeof tag)return tag;const tagObj=tagsByName[tag];if(tagObj)return tagObj;const keys=Object.keys(tagsByName).map((key=>JSON.stringify(key))).join(", ");throw new Error(`Unknown custom tag "${tag}"; use one of ${keys}`)}))}const sortMapEntriesByKey=(a,b)=>a.key<b.key?-1:a.key>b.key?1:0;class Schema{constructor({compat:compat,customTags:customTags,merge:merge,resolveKnownTags:resolveKnownTags,schema:schema,sortMapEntries:sortMapEntries,toStringDefaults:toStringDefaults}){this.compat=Array.isArray(compat)?getTags(compat,"compat"):compat?getTags(null,compat):null,this.merge=!!merge,this.name="string"==typeof schema&&schema||"core",this.knownTags=resolveKnownTags?coreKnownTags:{},this.tags=getTags(customTags,this.name),this.toStringOptions=toStringDefaults??null,Object.defineProperty(this,MAP,{value:map}),Object.defineProperty(this,SCALAR$1,{value:string}),Object.defineProperty(this,SEQ,{value:seq}),this.sortMapEntries="function"==typeof sortMapEntries?sortMapEntries:!0===sortMapEntries?sortMapEntriesByKey:null}clone(){const copy=Object.create(Schema.prototype,Object.getOwnPropertyDescriptors(this));return copy.tags=this.tags.slice(),copy}}class Document{constructor(value,replacer,options){this.commentBefore=null,this.comment=null,this.errors=[],this.warnings=[],Object.defineProperty(this,NODE_TYPE,{value:DOC});let _replacer=null;"function"==typeof replacer||Array.isArray(replacer)?_replacer=replacer:void 0===options&&replacer&&(options=replacer,replacer=void 0);const opt=Object.assign({intAsBigInt:!1,keepSourceTokens:!1,logLevel:"warn",prettyErrors:!0,strict:!0,uniqueKeys:!0,version:"1.2"},options);this.options=opt;let{version:version}=opt;options?._directives?(this.directives=options._directives.atDocument(),this.directives.yaml.explicit&&(version=this.directives.yaml.version)):this.directives=new Directives({version:version}),this.setSchema(version,options),this.contents=void 0===value?null:this.createNode(value,_replacer,options)}clone(){const copy=Object.create(Document.prototype,{[NODE_TYPE]:{value:DOC}});return copy.commentBefore=this.commentBefore,copy.comment=this.comment,copy.errors=this.errors.slice(),copy.warnings=this.warnings.slice(),copy.options=Object.assign({},this.options),this.directives&&(copy.directives=this.directives.clone()),copy.schema=this.schema.clone(),copy.contents=isNode(this.contents)?this.contents.clone(copy.schema):this.contents,this.range&&(copy.range=this.range.slice()),copy}add(value){assertCollection(this.contents)&&this.contents.add(value)}addIn(path,value){assertCollection(this.contents)&&this.contents.addIn(path,value)}createAlias(node,name){if(!node.anchor){const prev=anchorNames(this);node.anchor=!name||prev.has(name)?findNewAnchor(name||"a",prev):name}return new Alias(node.anchor)}createNode(value,replacer,options){let _replacer;if("function"==typeof replacer)value=replacer.call({"":value},"",value),_replacer=replacer;else if(Array.isArray(replacer)){const keyToStr=v=>"number"==typeof v||v instanceof String||v instanceof Number,asStr=replacer.filter(keyToStr).map(String);asStr.length>0&&(replacer=replacer.concat(asStr)),_replacer=replacer}else void 0===options&&replacer&&(options=replacer,replacer=void 0);const{aliasDuplicateObjects:aliasDuplicateObjects,anchorPrefix:anchorPrefix,flow:flow,keepUndefined:keepUndefined,onTagObj:onTagObj,tag:tag}=options??{},{onAnchor:onAnchor,setAnchors:setAnchors,sourceObjects:sourceObjects}=function(doc,prefix){const aliasObjects=[],sourceObjects=new Map;let prevAnchors=null;return{onAnchor:source=>{aliasObjects.push(source),prevAnchors||(prevAnchors=anchorNames(doc));const anchor=findNewAnchor(prefix,prevAnchors);return prevAnchors.add(anchor),anchor},setAnchors:()=>{for(const source of aliasObjects){const ref=sourceObjects.get(source);if("object"!=typeof ref||!ref.anchor||!isScalar$1(ref.node)&&!isCollection$1(ref.node)){const error=new Error("Failed to resolve repeated object (this should not happen)");throw error.source=source,error}ref.node.anchor=ref.anchor}},sourceObjects:sourceObjects}}(this,anchorPrefix||"a"),node=createNode(value,tag,{aliasDuplicateObjects:aliasDuplicateObjects??!0,keepUndefined:keepUndefined??!1,onAnchor:onAnchor,onTagObj:onTagObj,replacer:_replacer,schema:this.schema,sourceObjects:sourceObjects});return flow&&isCollection$1(node)&&(node.flow=!0),setAnchors(),node}createPair(key,value,options={}){const k=this.createNode(key,null,options),v=this.createNode(value,null,options);return new Pair(k,v)}delete(key){return!!assertCollection(this.contents)&&this.contents.delete(key)}deleteIn(path){return isEmptyPath(path)?null!=this.contents&&(this.contents=null,!0):!!assertCollection(this.contents)&&this.contents.deleteIn(path)}get(key,keepScalar){return isCollection$1(this.contents)?this.contents.get(key,keepScalar):void 0}getIn(path,keepScalar){return isEmptyPath(path)?!keepScalar&&isScalar$1(this.contents)?this.contents.value:this.contents:isCollection$1(this.contents)?this.contents.getIn(path,keepScalar):void 0}has(key){return!!isCollection$1(this.contents)&&this.contents.has(key)}hasIn(path){return isEmptyPath(path)?void 0!==this.contents:!!isCollection$1(this.contents)&&this.contents.hasIn(path)}set(key,value){null==this.contents?this.contents=collectionFromPath(this.schema,[key],value):assertCollection(this.contents)&&this.contents.set(key,value)}setIn(path,value){isEmptyPath(path)?this.contents=value:null==this.contents?this.contents=collectionFromPath(this.schema,Array.from(path),value):assertCollection(this.contents)&&this.contents.setIn(path,value)}setSchema(version,options={}){let opt;switch("number"==typeof version&&(version=String(version)),version){case"1.1":this.directives?this.directives.yaml.version="1.1":this.directives=new Directives({version:"1.1"}),opt={merge:!0,resolveKnownTags:!1,schema:"yaml-1.1"};break;case"1.2":case"next":this.directives?this.directives.yaml.version=version:this.directives=new Directives({version:version}),opt={merge:!1,resolveKnownTags:!0,schema:"core"};break;case null:this.directives&&delete this.directives,opt=null;break;default:{const sv=JSON.stringify(version);throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`)}}if(options.schema instanceof Object)this.schema=options.schema;else{if(!opt)throw new Error("With a null YAML version, the { schema: Schema } option is required");this.schema=new Schema(Object.assign(opt,options))}}toJS({json:json,jsonArg:jsonArg,mapAsMap:mapAsMap,maxAliasCount:maxAliasCount,onAnchor:onAnchor,reviver:reviver}={}){const ctx={anchors:new Map,doc:this,keep:!json,mapAsMap:!0===mapAsMap,mapKeyWarned:!1,maxAliasCount:"number"==typeof maxAliasCount?maxAliasCount:100},res=toJS(this.contents,jsonArg??"",ctx);if("function"==typeof onAnchor)for(const{count:count,res:res}of ctx.anchors.values())onAnchor(res,count);return"function"==typeof reviver?applyReviver(reviver,{"":res},"",res):res}toJSON(jsonArg,onAnchor){return this.toJS({json:!0,jsonArg:jsonArg,mapAsMap:!1,onAnchor:onAnchor})}toString(options={}){if(this.errors.length>0)throw new Error("Document with errors cannot be stringified");if("indent"in options&&(!Number.isInteger(options.indent)||Number(options.indent)<=0)){const s=JSON.stringify(options.indent);throw new Error(`"indent" option must be a positive integer, not ${s}`)}return function(doc,options){const lines=[];let hasDirectives=!0===options.directives;if(!1!==options.directives&&doc.directives){const dir=doc.directives.toString(doc);dir?(lines.push(dir),hasDirectives=!0):doc.directives.docStart&&(hasDirectives=!0)}hasDirectives&&lines.push("---");const ctx=createStringifyContext(doc,options),{commentString:commentString}=ctx.options;if(doc.commentBefore){1!==lines.length&&lines.unshift("");const cs=commentString(doc.commentBefore);lines.unshift(indentComment(cs,""))}let chompKeep=!1,contentComment=null;if(doc.contents){if(isNode(doc.contents)){if(doc.contents.spaceBefore&&hasDirectives&&lines.push(""),doc.contents.commentBefore){const cs=commentString(doc.contents.commentBefore);lines.push(indentComment(cs,""))}ctx.forceBlockIndent=!!doc.comment,contentComment=doc.contents.comment}const onChompKeep=contentComment?void 0:()=>chompKeep=!0;let body=stringify$2(doc.contents,ctx,(()=>contentComment=null),onChompKeep);contentComment&&(body+=lineComment(body,"",commentString(contentComment))),"|"!==body[0]&&">"!==body[0]||"---"!==lines[lines.length-1]?lines.push(body):lines[lines.length-1]=`--- ${body}`}else lines.push(stringify$2(doc.contents,ctx));if(doc.directives?.docEnd)if(doc.comment){const cs=commentString(doc.comment);cs.includes("\n")?(lines.push("..."),lines.push(indentComment(cs,""))):lines.push(`... ${cs}`)}else lines.push("...");else{let dc=doc.comment;dc&&chompKeep&&(dc=dc.replace(/^\n+/,"")),dc&&(chompKeep&&!contentComment||""===lines[lines.length-1]||lines.push(""),lines.push(indentComment(commentString(dc),"")))}return lines.join("\n")+"\n"}(this,options)}}function assertCollection(contents){if(isCollection$1(contents))return!0;throw new Error("Expected a YAML collection as document contents")}class YAMLError extends Error{constructor(name,pos,code,message){super(),this.name=name,this.code=code,this.message=message,this.pos=pos}}class YAMLParseError extends YAMLError{constructor(pos,code,message){super("YAMLParseError",pos,code,message)}}class YAMLWarning extends YAMLError{constructor(pos,code,message){super("YAMLWarning",pos,code,message)}}const prettifyError=(src,lc)=>error=>{if(-1===error.pos[0])return;error.linePos=error.pos.map((pos=>lc.linePos(pos)));const{line:line,col:col}=error.linePos[0];error.message+=` at line ${line}, column ${col}`;let ci=col-1,lineStr=src.substring(lc.lineStarts[line-1],lc.lineStarts[line]).replace(/[\n\r]+$/,"");if(ci>=60&&lineStr.length>80){const trimStart=Math.min(ci-39,lineStr.length-79);lineStr="…"+lineStr.substring(trimStart),ci-=trimStart-1}if(lineStr.length>80&&(lineStr=lineStr.substring(0,79)+"…"),line>1&&/^ *$/.test(lineStr.substring(0,ci))){let prev=src.substring(lc.lineStarts[line-2],lc.lineStarts[line-1]);prev.length>80&&(prev=prev.substring(0,79)+"…\n"),lineStr=prev+lineStr}if(/[^ ]/.test(lineStr)){let count=1;const end=error.linePos[1];end&&end.line===line&&end.col>col&&(count=Math.max(1,Math.min(end.col-col,80-ci)));const pointer=" ".repeat(ci)+"^".repeat(count);error.message+=`:\n\n${lineStr}\n${pointer}\n`}};function resolveProps(tokens,{flow:flow,indicator:indicator,next:next,offset:offset,onError:onError,startOnNewline:startOnNewline}){let spaceBefore=!1,atNewline=startOnNewline,hasSpace=startOnNewline,comment="",commentSep="",hasNewline=!1,hasNewlineAfterProp=!1,reqSpace=!1,anchor=null,tag=null,comma=null,found=null,start=null;for(const token of tokens)switch(reqSpace&&("space"!==token.type&&"newline"!==token.type&&"comma"!==token.type&&onError(token.offset,"MISSING_CHAR","Tags and anchors must be separated from the next token by white space"),reqSpace=!1),token.type){case"space":!flow&&atNewline&&"doc-start"!==indicator&&"\t"===token.source[0]&&onError(token,"TAB_AS_INDENT","Tabs are not allowed as indentation"),hasSpace=!0;break;case"comment":{hasSpace||onError(token,"MISSING_CHAR","Comments must be separated from other tokens by white space characters");const cb=token.source.substring(1)||" ";comment?comment+=commentSep+cb:comment=cb,commentSep="",atNewline=!1;break}case"newline":atNewline?comment?comment+=token.source:spaceBefore=!0:commentSep+=token.source,atNewline=!0,hasNewline=!0,(anchor||tag)&&(hasNewlineAfterProp=!0),hasSpace=!0;break;case"anchor":anchor&&onError(token,"MULTIPLE_ANCHORS","A node can have at most one anchor"),token.source.endsWith(":")&&onError(token.offset+token.source.length-1,"BAD_ALIAS","Anchor ending in : is ambiguous",!0),anchor=token,null===start&&(start=token.offset),atNewline=!1,hasSpace=!1,reqSpace=!0;break;case"tag":tag&&onError(token,"MULTIPLE_TAGS","A node can have at most one tag"),tag=token,null===start&&(start=token.offset),atNewline=!1,hasSpace=!1,reqSpace=!0;break;case indicator:(anchor||tag)&&onError(token,"BAD_PROP_ORDER",`Anchors and tags must be after the ${token.source} indicator`),found&&onError(token,"UNEXPECTED_TOKEN",`Unexpected ${token.source} in ${flow??"collection"}`),found=token,atNewline=!1,hasSpace=!1;break;case"comma":if(flow){comma&&onError(token,"UNEXPECTED_TOKEN",`Unexpected , in ${flow}`),comma=token,atNewline=!1,hasSpace=!1;break}default:onError(token,"UNEXPECTED_TOKEN",`Unexpected ${token.type} token`),atNewline=!1,hasSpace=!1}const last=tokens[tokens.length-1],end=last?last.offset+last.source.length:offset;return reqSpace&&next&&"space"!==next.type&&"newline"!==next.type&&"comma"!==next.type&&("scalar"!==next.type||""!==next.source)&&onError(next.offset,"MISSING_CHAR","Tags and anchors must be separated from the next token by white space"),{comma:comma,found:found,spaceBefore:spaceBefore,comment:comment,hasNewline:hasNewline,hasNewlineAfterProp:hasNewlineAfterProp,anchor:anchor,tag:tag,end:end,start:start??end}}function containsNewline(key){if(!key)return null;switch(key.type){case"alias":case"scalar":case"double-quoted-scalar":case"single-quoted-scalar":if(key.source.includes("\n"))return!0;if(key.end)for(const st of key.end)if("newline"===st.type)return!0;return!1;case"flow-collection":for(const it of key.items){for(const st of it.start)if("newline"===st.type)return!0;if(it.sep)for(const st of it.sep)if("newline"===st.type)return!0;if(containsNewline(it.key)||containsNewline(it.value))return!0}return!1;default:return!0}}function flowIndentCheck(indent,fc,onError){if("flow-collection"===fc?.type){const end=fc.end[0];if(end.indent===indent&&("]"===end.source||"}"===end.source)&&containsNewline(fc)){onError(end,"BAD_INDENT","Flow end indicator should be more indented than parent",!0)}}}function mapIncludes(ctx,items,search){const{uniqueKeys:uniqueKeys}=ctx.options;if(!1===uniqueKeys)return!1;const isEqual="function"==typeof uniqueKeys?uniqueKeys:(a,b)=>a===b||isScalar$1(a)&&isScalar$1(b)&&a.value===b.value&&!("<<"===a.value&&ctx.schema.merge);return items.some((pair=>isEqual(pair.key,search)))}const startColMsg="All mapping items must start at the same column";function resolveEnd(end,offset,reqSpace,onError){let comment="";if(end){let hasSpace=!1,sep="";for(const token of end){const{source:source,type:type}=token;switch(type){case"space":hasSpace=!0;break;case"comment":{reqSpace&&!hasSpace&&onError(token,"MISSING_CHAR","Comments must be separated from other tokens by white space characters");const cb=source.substring(1)||" ";comment?comment+=sep+cb:comment=cb,sep="";break}case"newline":comment&&(sep+=source),hasSpace=!0;break;default:onError(token,"UNEXPECTED_TOKEN",`Unexpected ${type} at node end`)}offset+=source.length}}return{comment:comment,offset:offset}}const blockMsg="Block collections are not allowed within flow collections",isBlock=token=>token&&("block-map"===token.type||"block-seq"===token.type);function resolveCollection(CN,ctx,token,onError,tagName,tag){const coll="block-map"===token.type?function({composeNode:composeNode,composeEmptyNode:composeEmptyNode},ctx,bm,onError,tag){const map=new(tag?.nodeClass??YAMLMap)(ctx.schema);ctx.atRoot&&(ctx.atRoot=!1);let offset=bm.offset,commentEnd=null;for(const collItem of bm.items){const{start:start,key:key,sep:sep,value:value}=collItem,keyProps=resolveProps(start,{indicator:"explicit-key-ind",next:key??sep?.[0],offset:offset,onError:onError,startOnNewline:!0}),implicitKey=!keyProps.found;if(implicitKey){if(key&&("block-seq"===key.type?onError(offset,"BLOCK_AS_IMPLICIT_KEY","A block sequence may not be used as an implicit map key"):"indent"in key&&key.indent!==bm.indent&&onError(offset,"BAD_INDENT",startColMsg)),!keyProps.anchor&&!keyProps.tag&&!sep){commentEnd=keyProps.end,keyProps.comment&&(map.comment?map.comment+="\n"+keyProps.comment:map.comment=keyProps.comment);continue}(keyProps.hasNewlineAfterProp||containsNewline(key))&&onError(key??start[start.length-1],"MULTILINE_IMPLICIT_KEY","Implicit keys need to be on a single line")}else keyProps.found?.indent!==bm.indent&&onError(offset,"BAD_INDENT",startColMsg);const keyStart=keyProps.end,keyNode=key?composeNode(ctx,key,keyProps,onError):composeEmptyNode(ctx,keyStart,start,null,keyProps,onError);ctx.schema.compat&&flowIndentCheck(bm.indent,key,onError),mapIncludes(ctx,map.items,keyNode)&&onError(keyStart,"DUPLICATE_KEY","Map keys must be unique");const valueProps=resolveProps(sep??[],{indicator:"map-value-ind",next:value,offset:keyNode.range[2],onError:onError,startOnNewline:!key||"block-scalar"===key.type});if(offset=valueProps.end,valueProps.found){implicitKey&&("block-map"!==value?.type||valueProps.hasNewline||onError(offset,"BLOCK_AS_IMPLICIT_KEY","Nested mappings are not allowed in compact mappings"),ctx.options.strict&&keyProps.start<valueProps.found.offset-1024&&onError(keyNode.range,"KEY_OVER_1024_CHARS","The : indicator must be at most 1024 chars after the start of an implicit block mapping key"));const valueNode=value?composeNode(ctx,value,valueProps,onError):composeEmptyNode(ctx,offset,sep,null,valueProps,onError);ctx.schema.compat&&flowIndentCheck(bm.indent,value,onError),offset=valueNode.range[2];const pair=new Pair(keyNode,valueNode);ctx.options.keepSourceTokens&&(pair.srcToken=collItem),map.items.push(pair)}else{implicitKey&&onError(keyNode.range,"MISSING_CHAR","Implicit map keys need to be followed by map values"),valueProps.comment&&(keyNode.comment?keyNode.comment+="\n"+valueProps.comment:keyNode.comment=valueProps.comment);const pair=new Pair(keyNode);ctx.options.keepSourceTokens&&(pair.srcToken=collItem),map.items.push(pair)}}return commentEnd&&commentEnd<offset&&onError(commentEnd,"IMPOSSIBLE","Map comment with trailing content"),map.range=[bm.offset,offset,commentEnd??offset],map}(CN,ctx,token,onError,tag):"block-seq"===token.type?function({composeNode:composeNode,composeEmptyNode:composeEmptyNode},ctx,bs,onError,tag){const seq=new(tag?.nodeClass??YAMLSeq)(ctx.schema);ctx.atRoot&&(ctx.atRoot=!1);let offset=bs.offset,commentEnd=null;for(const{start:start,value:value}of bs.items){const props=resolveProps(start,{indicator:"seq-item-ind",next:value,offset:offset,onError:onError,startOnNewline:!0});if(!props.found){if(!(props.anchor||props.tag||value)){commentEnd=props.end,props.comment&&(seq.comment=props.comment);continue}value&&"block-seq"===value.type?onError(props.end,"BAD_INDENT","All sequence items must start at the same column"):onError(offset,"MISSING_CHAR","Sequence item without - indicator")}const node=value?composeNode(ctx,value,props,onError):composeEmptyNode(ctx,props.end,start,null,props,onError);ctx.schema.compat&&flowIndentCheck(bs.indent,value,onError),offset=node.range[2],seq.items.push(node)}return seq.range=[bs.offset,offset,commentEnd??offset],seq}(CN,ctx,token,onError,tag):function({composeNode:composeNode,composeEmptyNode:composeEmptyNode},ctx,fc,onError,tag){const isMap="{"===fc.start.source,fcName=isMap?"flow map":"flow sequence",coll=new(tag?.nodeClass??(isMap?YAMLMap:YAMLSeq))(ctx.schema);coll.flow=!0;const atRoot=ctx.atRoot;atRoot&&(ctx.atRoot=!1);let offset=fc.offset+fc.start.source.length;for(let i=0;i<fc.items.length;++i){const collItem=fc.items[i],{start:start,key:key,sep:sep,value:value}=collItem,props=resolveProps(start,{flow:fcName,indicator:"explicit-key-ind",next:key??sep?.[0],offset:offset,onError:onError,startOnNewline:!1});if(!props.found){if(!(props.anchor||props.tag||sep||value)){0===i&&props.comma?onError(props.comma,"UNEXPECTED_TOKEN",`Unexpected , in ${fcName}`):i<fc.items.length-1&&onError(props.start,"UNEXPECTED_TOKEN",`Unexpected empty item in ${fcName}`),props.comment&&(coll.comment?coll.comment+="\n"+props.comment:coll.comment=props.comment),offset=props.end;continue}!isMap&&ctx.options.strict&&containsNewline(key)&&onError(key,"MULTILINE_IMPLICIT_KEY","Implicit keys of flow sequence pairs need to be on a single line")}if(0===i)props.comma&&onError(props.comma,"UNEXPECTED_TOKEN",`Unexpected , in ${fcName}`);else if(props.comma||onError(props.start,"MISSING_CHAR",`Missing , between ${fcName} items`),props.comment){let prevItemComment="";loop:for(const st of start)switch(st.type){case"comma":case"space":break;case"comment":prevItemComment=st.source.substring(1);break loop;default:break loop}if(prevItemComment){let prev=coll.items[coll.items.length-1];isPair(prev)&&(prev=prev.value??prev.key),prev.comment?prev.comment+="\n"+prevItemComment:prev.comment=prevItemComment,props.comment=props.comment.substring(prevItemComment.length+1)}}if(isMap||sep||props.found){const keyStart=props.end,keyNode=key?composeNode(ctx,key,props,onError):composeEmptyNode(ctx,keyStart,start,null,props,onError);isBlock(key)&&onError(keyNode.range,"BLOCK_IN_FLOW",blockMsg);const valueProps=resolveProps(sep??[],{flow:fcName,indicator:"map-value-ind",next:value,offset:keyNode.range[2],onError:onError,startOnNewline:!1});if(valueProps.found){if(!isMap&&!props.found&&ctx.options.strict){if(sep)for(const st of sep){if(st===valueProps.found)break;if("newline"===st.type){onError(st,"MULTILINE_IMPLICIT_KEY","Implicit keys of flow sequence pairs need to be on a single line");break}}props.start<valueProps.found.offset-1024&&onError(valueProps.found,"KEY_OVER_1024_CHARS","The : indicator must be at most 1024 chars after the start of an implicit flow sequence key")}}else value&&("source"in value&&value.source&&":"===value.source[0]?onError(value,"MISSING_CHAR",`Missing space after : in ${fcName}`):onError(valueProps.start,"MISSING_CHAR",`Missing , or : between ${fcName} items`));const valueNode=value?composeNode(ctx,value,valueProps,onError):valueProps.found?composeEmptyNode(ctx,valueProps.end,sep,null,valueProps,onError):null;valueNode?isBlock(value)&&onError(valueNode.range,"BLOCK_IN_FLOW",blockMsg):valueProps.comment&&(keyNode.comment?keyNode.comment+="\n"+valueProps.comment:keyNode.comment=valueProps.comment);const pair=new Pair(keyNode,valueNode);if(ctx.options.keepSourceTokens&&(pair.srcToken=collItem),isMap){const map=coll;mapIncludes(ctx,map.items,keyNode)&&onError(keyStart,"DUPLICATE_KEY","Map keys must be unique"),map.items.push(pair)}else{const map=new YAMLMap(ctx.schema);map.flow=!0,map.items.push(pair),coll.items.push(map)}offset=valueNode?valueNode.range[2]:valueProps.end}else{const valueNode=value?composeNode(ctx,value,props,onError):composeEmptyNode(ctx,props.end,sep,null,props,onError);coll.items.push(valueNode),offset=valueNode.range[2],isBlock(value)&&onError(valueNode.range,"BLOCK_IN_FLOW",blockMsg)}}const expectedEnd=isMap?"}":"]",[ce,...ee]=fc.end;let cePos=offset;if(ce&&ce.source===expectedEnd)cePos=ce.offset+ce.source.length;else{const name=fcName[0].toUpperCase()+fcName.substring(1);onError(offset,atRoot?"MISSING_CHAR":"BAD_INDENT",atRoot?`${name} must end with a ${expectedEnd}`:`${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`),ce&&1!==ce.source.length&&ee.unshift(ce)}if(ee.length>0){const end=resolveEnd(ee,cePos,ctx.options.strict,onError);end.comment&&(coll.comment?coll.comment+="\n"+end.comment:coll.comment=end.comment),coll.range=[fc.offset,cePos,end.offset]}else coll.range=[fc.offset,cePos,cePos];return coll}(CN,ctx,token,onError,tag),Coll=coll.constructor;return"!"===tagName||tagName===Coll.tagName?(coll.tag=Coll.tagName,coll):(tagName&&(coll.tag=tagName),coll)}function resolveBlockScalar(scalar,strict,onError){const start=scalar.offset,header=function({offset:offset,props:props},strict,onError){if("block-scalar-header"!==props[0].type)return onError(props[0],"IMPOSSIBLE","Block scalar header not found"),null;const{source:source}=props[0],mode=source[0];let indent=0,chomp="",error=-1;for(let i=1;i<source.length;++i){const ch=source[i];if(chomp||"-"!==ch&&"+"!==ch){const n=Number(ch);!indent&&n?indent=n:-1===error&&(error=offset+i)}else chomp=ch}-1!==error&&onError(error,"UNEXPECTED_TOKEN",`Block scalar header includes extra characters: ${source}`);let hasSpace=!1,comment="",length=source.length;for(let i=1;i<props.length;++i){const token=props[i];switch(token.type){case"space":hasSpace=!0;case"newline":length+=token.source.length;break;case"comment":if(strict&&!hasSpace){onError(token,"MISSING_CHAR","Comments must be separated from other tokens by white space characters")}length+=token.source.length,comment=token.source.substring(1);break;case"error":onError(token,"UNEXPECTED_TOKEN",token.message),length+=token.source.length;break;default:{onError(token,"UNEXPECTED_TOKEN",`Unexpected token in block scalar header: ${token.type}`);const ts=token.source;ts&&"string"==typeof ts&&(length+=ts.length)}}}return{mode:mode,indent:indent,chomp:chomp,comment:comment,length:length}}(scalar,strict,onError);if(!header)return{value:"",type:null,comment:"",range:[start,start,start]};const type=">"===header.mode?Scalar.BLOCK_FOLDED:Scalar.BLOCK_LITERAL,lines=scalar.source?function(source){const split=source.split(/\n( *)/),first=split[0],m=first.match(/^( *)/),lines=[m?.[1]?[m[1],first.slice(m[1].length)]:["",first]];for(let i=1;i<split.length;i+=2)lines.push([split[i],split[i+1]]);return lines}(scalar.source):[];let chompStart=lines.length;for(let i=lines.length-1;i>=0;--i){const content=lines[i][1];if(""!==content&&"\r"!==content)break;chompStart=i}if(0===chompStart){const value="+"===header.chomp&&lines.length>0?"\n".repeat(Math.max(1,lines.length-1)):"";let end=start+header.length;return scalar.source&&(end+=scalar.source.length),{value:value,type:type,comment:header.comment,range:[start,end,end]}}let trimIndent=scalar.indent+header.indent,offset=scalar.offset+header.length,contentStart=0;for(let i=0;i<chompStart;++i){const[indent,content]=lines[i];if(""!==content&&"\r"!==content){if(indent.length<trimIndent){const message="Block scalars with more-indented leading empty lines must use an explicit indentation indicator";onError(offset+indent.length,"MISSING_CHAR",message)}0===header.indent&&(trimIndent=indent.length),contentStart=i;break}0===header.indent&&indent.length>trimIndent&&(trimIndent=indent.length),offset+=indent.length+content.length+1}for(let i=lines.length-1;i>=chompStart;--i)lines[i][0].length>trimIndent&&(chompStart=i+1);let value="",sep="",prevMoreIndented=!1;for(let i=0;i<contentStart;++i)value+=lines[i][0].slice(trimIndent)+"\n";for(let i=contentStart;i<chompStart;++i){let[indent,content]=lines[i];offset+=indent.length+content.length+1;const crlf="\r"===content[content.length-1];if(crlf&&(content=content.slice(0,-1)),content&&indent.length<trimIndent){const message=`Block scalar lines must not be less indented than their ${header.indent?"explicit indentation indicator":"first line"}`;onError(offset-content.length-(crlf?2:1),"BAD_INDENT",message),indent=""}type===Scalar.BLOCK_LITERAL?(value+=sep+indent.slice(trimIndent)+content,sep="\n"):indent.length>trimIndent||"\t"===content[0]?(" "===sep?sep="\n":prevMoreIndented||"\n"!==sep||(sep="\n\n"),value+=sep+indent.slice(trimIndent)+content,sep="\n",prevMoreIndented=!0):""===content?"\n"===sep?value+="\n":sep="\n":(value+=sep+content,sep=" ",prevMoreIndented=!1)}switch(header.chomp){case"-":break;case"+":for(let i=chompStart;i<lines.length;++i)value+="\n"+lines[i][0].slice(trimIndent);"\n"!==value[value.length-1]&&(value+="\n");break;default:value+="\n"}const end=start+header.length+scalar.source.length;return{value:value,type:type,comment:header.comment,range:[start,end,end]}}function resolveFlowScalar(scalar,strict,onError){const{offset:offset,type:type,source:source,end:end}=scalar;let _type,value;const _onError=(rel,code,msg)=>onError(offset+rel,code,msg);switch(type){case"scalar":_type=Scalar.PLAIN,value=function(source,onError){let badChar="";switch(source[0]){case"\t":badChar="a tab character";break;case",":badChar="flow indicator character ,";break;case"%":badChar="directive indicator character %";break;case"|":case">":badChar=`block scalar indicator ${source[0]}`;break;case"@":case"`":badChar=`reserved character ${source[0]}`}badChar&&onError(0,"BAD_SCALAR_START",`Plain value cannot start with ${badChar}`);return foldLines(source)}(source,_onError);break;case"single-quoted-scalar":_type=Scalar.QUOTE_SINGLE,value=function(source,onError){"'"===source[source.length-1]&&1!==source.length||onError(source.length,"MISSING_CHAR","Missing closing 'quote");return foldLines(source.slice(1,-1)).replace(/''/g,"'")}(source,_onError);break;case"double-quoted-scalar":_type=Scalar.QUOTE_DOUBLE,value=function(source,onError){let res="";for(let i=1;i<source.length-1;++i){const ch=source[i];if("\r"!==ch||"\n"!==source[i+1])if("\n"===ch){const{fold:fold,offset:offset}=foldNewline(source,i);res+=fold,i=offset}else if("\\"===ch){let next=source[++i];const cc=escapeCodes[next];if(cc)res+=cc;else if("\n"===next)for(next=source[i+1];" "===next||"\t"===next;)next=source[1+ ++i];else if("\r"===next&&"\n"===source[i+1])for(next=source[1+ ++i];" "===next||"\t"===next;)next=source[1+ ++i];else if("x"===next||"u"===next||"U"===next){const length={x:2,u:4,U:8}[next];res+=parseCharCode(source,i+1,length,onError),i+=length}else{const raw=source.substr(i-1,2);onError(i-1,"BAD_DQ_ESCAPE",`Invalid escape sequence ${raw}`),res+=raw}}else if(" "===ch||"\t"===ch){const wsStart=i;let next=source[i+1];for(;" "===next||"\t"===next;)next=source[1+ ++i];"\n"===next||"\r"===next&&"\n"===source[i+2]||(res+=i>wsStart?source.slice(wsStart,i+1):ch)}else res+=ch}'"'===source[source.length-1]&&1!==source.length||onError(source.length,"MISSING_CHAR",'Missing closing "quote');return res}(source,_onError);break;default:return onError(scalar,"UNEXPECTED_TOKEN",`Expected a flow scalar value, but found: ${type}`),{value:"",type:null,comment:"",range:[offset,offset+source.length,offset+source.length]}}const valueEnd=offset+source.length,re=resolveEnd(end,valueEnd,strict,onError);return{value:value,type:_type,comment:re.comment,range:[offset,valueEnd,re.offset]}}function foldLines(source){let first,line;try{first=new RegExp("(.*?)(?<![ \t])[ \t]*\r?\n","sy"),line=new RegExp("[ \t]*(.*?)(?:(?<![ \t])[ \t]*)?\r?\n","sy")}catch(_){first=/(.*?)[ \t]*\r?\n/sy,line=/[ \t]*(.*?)[ \t]*\r?\n/sy}let match=first.exec(source);if(!match)return source;let res=match[1],sep=" ",pos=first.lastIndex;for(line.lastIndex=pos;match=line.exec(source);)""===match[1]?"\n"===sep?res+=sep:sep="\n":(res+=sep+match[1],sep=" "),pos=line.lastIndex;const last=/[ \t]*(.*)/sy;return last.lastIndex=pos,match=last.exec(source),res+sep+(match?.[1]??"")}function foldNewline(source,offset){let fold="",ch=source[offset+1];for(;!(" "!==ch&&"\t"!==ch&&"\n"!==ch&&"\r"!==ch||"\r"===ch&&"\n"!==source[offset+2]);)"\n"===ch&&(fold+="\n"),ch=source[(offset+=1)+1];return fold||(fold=" "),{fold:fold,offset:offset}}const escapeCodes={0:"\0",a:"",b:"\b",e:"",f:"\f",n:"\n",r:"\r",t:"\t",v:"\v",N:"",_:" ",L:"\u2028",P:"\u2029"," ":" ",'"':'"',"/":"/","\\":"\\","\t":"\t"};function parseCharCode(source,offset,length,onError){const cc=source.substr(offset,length),code=cc.length===length&&/^[0-9a-fA-F]+$/.test(cc)?parseInt(cc,16):NaN;if(isNaN(code)){const raw=source.substr(offset-2,length+2);return onError(offset-2,"BAD_DQ_ESCAPE",`Invalid escape sequence ${raw}`),raw}return String.fromCodePoint(code)}function composeScalar(ctx,token,tagToken,onError){const{value:value,type:type,comment:comment,range:range}="block-scalar"===token.type?resolveBlockScalar(token,ctx.options.strict,onError):resolveFlowScalar(token,ctx.options.strict,onError),tagName=tagToken?ctx.directives.tagName(tagToken.source,(msg=>onError(tagToken,"TAG_RESOLVE_FAILED",msg))):null,tag=tagToken&&tagName?function(schema,value,tagName,tagToken,onError){if("!"===tagName)return schema[SCALAR$1];const matchWithTest=[];for(const tag of schema.tags)if(!tag.collection&&tag.tag===tagName){if(!tag.default||!tag.test)return tag;matchWithTest.push(tag)}for(const tag of matchWithTest)if(tag.test?.test(value))return tag;const kt=schema.knownTags[tagName];if(kt&&!kt.collection)return schema.tags.push(Object.assign({},kt,{default:!1,test:void 0})),kt;return onError(tagToken,"TAG_RESOLVE_FAILED",`Unresolved tag: ${tagName}`,"tag:yaml.org,2002:str"!==tagName),schema[SCALAR$1]}(ctx.schema,value,tagName,tagToken,onError):"scalar"===token.type?function({directives:directives,schema:schema},value,token,onError){const tag=schema.tags.find((tag=>tag.default&&tag.test?.test(value)))||schema[SCALAR$1];if(schema.compat){const compat=schema.compat.find((tag=>tag.default&&tag.test?.test(value)))??schema[SCALAR$1];if(tag.tag!==compat.tag){onError(token,"TAG_RESOLVE_FAILED",`Value may be parsed as either ${directives.tagString(tag.tag)} or ${directives.tagString(compat.tag)}`,!0)}}return tag}(ctx,value,token,onError):ctx.schema[SCALAR$1];let scalar;try{const res=tag.resolve(value,(msg=>onError(tagToken??token,"TAG_RESOLVE_FAILED",msg)),ctx.options);scalar=isScalar$1(res)?res:new Scalar(res)}catch(error){const msg=error instanceof Error?error.message:String(error);onError(tagToken??token,"TAG_RESOLVE_FAILED",msg),scalar=new Scalar(value)}return scalar.range=range,scalar.source=value,type&&(scalar.type=type),tagName&&(scalar.tag=tagName),tag.format&&(scalar.format=tag.format),comment&&(scalar.comment=comment),scalar}function emptyScalarPosition(offset,before,pos){if(before){null===pos&&(pos=before.length);for(let i=pos-1;i>=0;--i){let st=before[i];switch(st.type){case"space":case"comment":case"newline":offset-=st.source.length;continue}for(st=before[++i];"space"===st?.type;)offset+=st.source.length,st=before[++i];break}}return offset}const CN={composeNode:composeNode,composeEmptyNode:composeEmptyNode};function composeNode(ctx,token,props,onError){const{spaceBefore:spaceBefore,comment:comment,anchor:anchor,tag:tag}=props;let node,isSrcToken=!0;switch(token.type){case"alias":node=function({options:options},{offset:offset,source:source,end:end},onError){const alias=new Alias(source.substring(1));""===alias.source&&onError(offset,"BAD_ALIAS","Alias cannot be an empty string");alias.source.endsWith(":")&&onError(offset+source.length-1,"BAD_ALIAS","Alias ending in : is ambiguous",!0);const valueEnd=offset+source.length,re=resolveEnd(end,valueEnd,options.strict,onError);alias.range=[offset,valueEnd,re.offset],re.comment&&(alias.comment=re.comment);return alias}(ctx,token,onError),(anchor||tag)&&onError(token,"ALIAS_PROPS","An alias node must not specify any properties");break;case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"block-scalar":node=composeScalar(ctx,token,tag,onError),anchor&&(node.anchor=anchor.source.substring(1));break;case"block-map":case"block-seq":case"flow-collection":node=function(CN,ctx,token,tagToken,onError){const tagName=tagToken?ctx.directives.tagName(tagToken.source,(msg=>onError(tagToken,"TAG_RESOLVE_FAILED",msg))):null,expType="block-map"===token.type?"map":"block-seq"===token.type?"seq":"{"===token.start.source?"map":"seq";if(!tagToken||!tagName||"!"===tagName||tagName===YAMLMap.tagName&&"map"===expType||tagName===YAMLSeq.tagName&&"seq"===expType||!expType)return resolveCollection(CN,ctx,token,onError,tagName);let tag=ctx.schema.tags.find((t=>t.tag===tagName&&t.collection===expType));if(!tag){const kt=ctx.schema.knownTags[tagName];if(!kt||kt.collection!==expType)return kt?.collection?onError(tagToken,"BAD_COLLECTION_TYPE",`${kt.tag} used for ${expType} collection, but expects ${kt.collection}`,!0):onError(tagToken,"TAG_RESOLVE_FAILED",`Unresolved tag: ${tagName}`,!0),resolveCollection(CN,ctx,token,onError,tagName);ctx.schema.tags.push(Object.assign({},kt,{default:!1})),tag=kt}const coll=resolveCollection(CN,ctx,token,onError,tagName,tag),res=tag.resolve?.(coll,(msg=>onError(tagToken,"TAG_RESOLVE_FAILED",msg)),ctx.options)??coll,node=isNode(res)?res:new Scalar(res);return node.range=coll.range,node.tag=tagName,tag?.format&&(node.format=tag.format),node}(CN,ctx,token,tag,onError),anchor&&(node.anchor=anchor.source.substring(1));break;default:onError(token,"UNEXPECTED_TOKEN","error"===token.type?token.message:`Unsupported token (type: ${token.type})`),node=composeEmptyNode(ctx,token.offset,void 0,null,props,onError),isSrcToken=!1}return anchor&&""===node.anchor&&onError(anchor,"BAD_ALIAS","Anchor cannot be an empty string"),spaceBefore&&(node.spaceBefore=!0),comment&&("scalar"===token.type&&""===token.source?node.comment=comment:node.commentBefore=comment),ctx.options.keepSourceTokens&&isSrcToken&&(node.srcToken=token),node}function composeEmptyNode(ctx,offset,before,pos,{spaceBefore:spaceBefore,comment:comment,anchor:anchor,tag:tag,end:end},onError){const node=composeScalar(ctx,{type:"scalar",offset:emptyScalarPosition(offset,before,pos),indent:-1,source:""},tag,onError);return anchor&&(node.anchor=anchor.source.substring(1),""===node.anchor&&onError(anchor,"BAD_ALIAS","Anchor cannot be an empty string")),spaceBefore&&(node.spaceBefore=!0),comment&&(node.comment=comment,node.range[2]=end),node}function getErrorPos(src){if("number"==typeof src)return[src,src+1];if(Array.isArray(src))return 2===src.length?src:[src[0],src[1]];const{offset:offset,source:source}=src;return[offset,offset+("string"==typeof source?source.length:1)]}function parsePrelude(prelude){let comment="",atComment=!1,afterEmptyLine=!1;for(let i=0;i<prelude.length;++i){const source=prelude[i];switch(source[0]){case"#":comment+=(""===comment?"":afterEmptyLine?"\n\n":"\n")+(source.substring(1)||" "),atComment=!0,afterEmptyLine=!1;break;case"%":"#"!==prelude[i+1]?.[0]&&(i+=1),atComment=!1;break;default:atComment||(afterEmptyLine=!0),atComment=!1}}return{comment:comment,afterEmptyLine:afterEmptyLine}}class Composer{constructor(options={}){this.doc=null,this.atDirectives=!1,this.prelude=[],this.errors=[],this.warnings=[],this.onError=(source,code,message,warning)=>{const pos=getErrorPos(source);warning?this.warnings.push(new YAMLWarning(pos,code,message)):this.errors.push(new YAMLParseError(pos,code,message))},this.directives=new Directives({version:options.version||"1.2"}),this.options=options}decorate(doc,afterDoc){const{comment:comment,afterEmptyLine:afterEmptyLine}=parsePrelude(this.prelude);if(comment){const dc=doc.contents;if(afterDoc)doc.comment=doc.comment?`${doc.comment}\n${comment}`:comment;else if(afterEmptyLine||doc.directives.docStart||!dc)doc.commentBefore=comment;else if(isCollection$1(dc)&&!dc.flow&&dc.items.length>0){let it=dc.items[0];isPair(it)&&(it=it.key);const cb=it.commentBefore;it.commentBefore=cb?`${comment}\n${cb}`:comment}else{const cb=dc.commentBefore;dc.commentBefore=cb?`${comment}\n${cb}`:comment}}afterDoc?(Array.prototype.push.apply(doc.errors,this.errors),Array.prototype.push.apply(doc.warnings,this.warnings)):(doc.errors=this.errors,doc.warnings=this.warnings),this.prelude=[],this.errors=[],this.warnings=[]}streamInfo(){return{comment:parsePrelude(this.prelude).comment,directives:this.directives,errors:this.errors,warnings:this.warnings}}*compose(tokens,forceDoc=!1,endOffset=-1){for(const token of tokens)yield*this.next(token);yield*this.end(forceDoc,endOffset)}*next(token){switch(token.type){case"directive":this.directives.add(token.source,((offset,message,warning)=>{const pos=getErrorPos(token);pos[0]+=offset,this.onError(pos,"BAD_DIRECTIVE",message,warning)})),this.prelude.push(token.source),this.atDirectives=!0;break;case"document":{const doc=function(options,directives,{offset:offset,start:start,value:value,end:end},onError){const opts=Object.assign({_directives:directives},options),doc=new Document(void 0,opts),ctx={atRoot:!0,directives:doc.directives,options:doc.options,schema:doc.schema},props=resolveProps(start,{indicator:"doc-start",next:value??end?.[0],offset:offset,onError:onError,startOnNewline:!0});props.found&&(doc.directives.docStart=!0,!value||"block-map"!==value.type&&"block-seq"!==value.type||props.hasNewline||onError(props.end,"MISSING_CHAR","Block collection cannot start on same line with directives-end marker")),doc.contents=value?composeNode(ctx,value,props,onError):composeEmptyNode(ctx,props.end,start,null,props,onError);const contentEnd=doc.contents.range[2],re=resolveEnd(end,contentEnd,!1,onError);return re.comment&&(doc.comment=re.comment),doc.range=[offset,contentEnd,re.offset],doc}(this.options,this.directives,token,this.onError);this.atDirectives&&!doc.directives.docStart&&this.onError(token,"MISSING_CHAR","Missing directives-end/doc-start indicator line"),this.decorate(doc,!1),this.doc&&(yield this.doc),this.doc=doc,this.atDirectives=!1;break}case"byte-order-mark":case"space":break;case"comment":case"newline":this.prelude.push(token.source);break;case"error":{const msg=token.source?`${token.message}: ${JSON.stringify(token.source)}`:token.message,error=new YAMLParseError(getErrorPos(token),"UNEXPECTED_TOKEN",msg);this.atDirectives||!this.doc?this.errors.push(error):this.doc.errors.push(error);break}case"doc-end":{if(!this.doc){const msg="Unexpected doc-end without preceding document";this.errors.push(new YAMLParseError(getErrorPos(token),"UNEXPECTED_TOKEN",msg));break}this.doc.directives.docEnd=!0;const end=resolveEnd(token.end,token.offset+token.source.length,this.doc.options.strict,this.onError);if(this.decorate(this.doc,!0),end.comment){const dc=this.doc.comment;this.doc.comment=dc?`${dc}\n${end.comment}`:end.comment}this.doc.range[2]=end.offset;break}default:this.errors.push(new YAMLParseError(getErrorPos(token),"UNEXPECTED_TOKEN",`Unsupported token ${token.type}`))}}*end(forceDoc=!1,endOffset=-1){if(this.doc)this.decorate(this.doc,!0),yield this.doc,this.doc=null;else if(forceDoc){const opts=Object.assign({_directives:this.directives},this.options),doc=new Document(void 0,opts);this.atDirectives&&this.onError(endOffset,"MISSING_CHAR","Missing directives-end indicator line"),doc.range=[0,endOffset,endOffset],this.decorate(doc,!1),yield doc}}}function addEndtoBlockProps(props,end){if(end)for(const st of end)switch(st.type){case"space":case"comment":props.push(st);break;case"newline":return props.push(st),!0}return!1}function setFlowScalarValue(token,source,type){switch(token.type){case"scalar":case"double-quoted-scalar":case"single-quoted-scalar":token.type=type,token.source=source;break;case"block-scalar":{const end=token.props.slice(1);let oa=source.length;"block-scalar-header"===token.props[0].type&&(oa-=token.props[0].source.length);for(const tok of end)tok.offset+=oa;delete token.props,Object.assign(token,{type:type,source:source,end:end});break}case"block-map":case"block-seq":{const nl={type:"newline",offset:token.offset+source.length,indent:token.indent,source:"\n"};delete token.items,Object.assign(token,{type:type,source:source,end:[nl]});break}default:{const indent="indent"in token?token.indent:-1,end="end"in token&&Array.isArray(token.end)?token.end.filter((st=>"space"===st.type||"comment"===st.type||"newline"===st.type)):[];for(const key of Object.keys(token))"type"!==key&&"offset"!==key&&delete token[key];Object.assign(token,{type:type,indent:indent,source:source,end:end})}}}function stringifyToken(token){switch(token.type){case"block-scalar":{let res="";for(const tok of token.props)res+=stringifyToken(tok);return res+token.source}case"block-map":case"block-seq":{let res="";for(const item of token.items)res+=stringifyItem(item);return res}case"flow-collection":{let res=token.start.source;for(const item of token.items)res+=stringifyItem(item);for(const st of token.end)res+=st.source;return res}case"document":{let res=stringifyItem(token);if(token.end)for(const st of token.end)res+=st.source;return res}default:{let res=token.source;if("end"in token&&token.end)for(const st of token.end)res+=st.source;return res}}}function stringifyItem({start:start,key:key,sep:sep,value:value}){let res="";for(const st of start)res+=st.source;if(key&&(res+=stringifyToken(key)),sep)for(const st of sep)res+=st.source;return value&&(res+=stringifyToken(value)),res}const BREAK=Symbol("break visit"),SKIP=Symbol("skip children"),REMOVE=Symbol("remove item");function visit(cst,visitor){"type"in cst&&"document"===cst.type&&(cst={start:cst.start,value:cst.value}),_visit(Object.freeze([]),cst,visitor)}function _visit(path,item,visitor){let ctrl=visitor(item,path);if("symbol"==typeof ctrl)return ctrl;for(const field of["key","value"]){const token=item[field];if(token&&"items"in token){for(let i=0;i<token.items.length;++i){const ci=_visit(Object.freeze(path.concat([[field,i]])),token.items[i],visitor);if("number"==typeof ci)i=ci-1;else{if(ci===BREAK)return BREAK;ci===REMOVE&&(token.items.splice(i,1),i-=1)}}"function"==typeof ctrl&&"key"===field&&(ctrl=ctrl(item,path))}}return"function"==typeof ctrl?ctrl(item,path):ctrl}visit.BREAK=BREAK,visit.SKIP=SKIP,visit.REMOVE=REMOVE,visit.itemAtPath=(cst,path)=>{let item=cst;for(const[field,index]of path){const tok=item?.[field];if(!tok||!("items"in tok))return;item=tok.items[index]}return item},visit.parentCollection=(cst,path)=>{const parent=visit.itemAtPath(cst,path.slice(0,-1)),field=path[path.length-1][0],coll=parent?.[field];if(coll&&"items"in coll)return coll;throw new Error("Parent collection not found")};function tokenType(source){switch(source){case"\ufeff":return"byte-order-mark";case"":return"doc-mode";case"":return"flow-error-end";case"":return"scalar";case"---":return"doc-start";case"...":return"doc-end";case"":case"\n":case"\r\n":return"newline";case"-":return"seq-item-ind";case"?":return"explicit-key-ind";case":":return"map-value-ind";case"{":return"flow-map-start";case"}":return"flow-map-end";case"[":return"flow-seq-start";case"]":return"flow-seq-end";case",":return"comma"}switch(source[0]){case" ":case"\t":return"space";case"#":return"comment";case"%":return"directive-line";case"*":return"alias";case"&":return"anchor";case"!":return"tag";case"'":return"single-quoted-scalar";case'"':return"double-quoted-scalar";case"|":case">":return"block-scalar-header"}return null}var cst=Object.freeze({__proto__:null,BOM:"\ufeff",DOCUMENT:"",FLOW_END:"",SCALAR:"",isCollection:token=>!!token&&"items"in token,isScalar:token=>!!token&&("scalar"===token.type||"single-quoted-scalar"===token.type||"double-quoted-scalar"===token.type||"block-scalar"===token.type),prettyToken:function(token){switch(token){case"\ufeff":return"<BOM>";case"":return"<DOC>";case"":return"<FLOW_END>";case"":return"<SCALAR>";default:return JSON.stringify(token)}},tokenType:tokenType,createScalarToken:function(value,context){const{implicitKey:implicitKey=!1,indent:indent,inFlow:inFlow=!1,offset:offset=-1,type:type="PLAIN"}=context,source=stringifyString({type:type,value:value},{implicitKey:implicitKey,indent:indent>0?" ".repeat(indent):"",inFlow:inFlow,options:{blockQuote:!0,lineWidth:-1}}),end=context.end??[{type:"newline",offset:-1,indent:indent,source:"\n"}];switch(source[0]){case"|":case">":{const he=source.indexOf("\n"),head=source.substring(0,he),body=source.substring(he+1)+"\n",props=[{type:"block-scalar-header",offset:offset,indent:indent,source:head}];return addEndtoBlockProps(props,end)||props.push({type:"newline",offset:-1,indent:indent,source:"\n"}),{type:"block-scalar",offset:offset,indent:indent,props:props,source:body}}case'"':return{type:"double-quoted-scalar",offset:offset,indent:indent,source:source,end:end};case"'":return{type:"single-quoted-scalar",offset:offset,indent:indent,source:source,end:end};default:return{type:"scalar",offset:offset,indent:indent,source:source,end:end}}},resolveAsScalar:function(token,strict=!0,onError){if(token){const _onError=(pos,code,message)=>{const offset="number"==typeof pos?pos:Array.isArray(pos)?pos[0]:pos.offset;if(!onError)throw new YAMLParseError([offset,offset+1],code,message);onError(offset,code,message)};switch(token.type){case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return resolveFlowScalar(token,strict,_onError);case"block-scalar":return resolveBlockScalar(token,strict,_onError)}}return null},setScalarValue:function(token,value,context={}){let{afterKey:afterKey=!1,implicitKey:implicitKey=!1,inFlow:inFlow=!1,type:type}=context,indent="indent"in token?token.indent:null;if(afterKey&&"number"==typeof indent&&(indent+=2),!type)switch(token.type){case"single-quoted-scalar":type="QUOTE_SINGLE";break;case"double-quoted-scalar":type="QUOTE_DOUBLE";break;case"block-scalar":{const header=token.props[0];if("block-scalar-header"!==header.type)throw new Error("Invalid block scalar header");type=">"===header.source[0]?"BLOCK_FOLDED":"BLOCK_LITERAL";break}default:type="PLAIN"}const source=stringifyString({type:type,value:value},{implicitKey:implicitKey||null===indent,indent:null!==indent&&indent>0?" ".repeat(indent):"",inFlow:inFlow,options:{blockQuote:!0,lineWidth:-1}});switch(source[0]){case"|":case">":!function(token,source){const he=source.indexOf("\n"),head=source.substring(0,he),body=source.substring(he+1)+"\n";if("block-scalar"===token.type){const header=token.props[0];if("block-scalar-header"!==header.type)throw new Error("Invalid block scalar header");header.source=head,token.source=body}else{const{offset:offset}=token,indent="indent"in token?token.indent:-1,props=[{type:"block-scalar-header",offset:offset,indent:indent,source:head}];addEndtoBlockProps(props,"end"in token?token.end:void 0)||props.push({type:"newline",offset:-1,indent:indent,source:"\n"});for(const key of Object.keys(token))"type"!==key&&"offset"!==key&&delete token[key];Object.assign(token,{type:"block-scalar",indent:indent,props:props,source:body})}}(token,source);break;case'"':setFlowScalarValue(token,source,"double-quoted-scalar");break;case"'":setFlowScalarValue(token,source,"single-quoted-scalar");break;default:setFlowScalarValue(token,source,"scalar")}},stringify:cst=>"type"in cst?stringifyToken(cst):stringifyItem(cst),visit:visit});function isEmpty(ch){switch(ch){case void 0:case" ":case"\n":case"\r":case"\t":return!0;default:return!1}}const hexDigits="0123456789ABCDEFabcdef".split(""),tagChars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()".split(""),invalidFlowScalarChars=",[]{}".split(""),invalidAnchorChars=" ,[]{}\n\r\t".split(""),isNotAnchorChar=ch=>!ch||invalidAnchorChars.includes(ch);class Lexer{constructor(){this.atEnd=!1,this.blockScalarIndent=-1,this.blockScalarKeep=!1,this.buffer="",this.flowKey=!1,this.flowLevel=0,this.indentNext=0,this.indentValue=0,this.lineEndPos=null,this.next=null,this.pos=0}*lex(source,incomplete=!1){source&&(this.buffer=this.buffer?this.buffer+source:source,this.lineEndPos=null),this.atEnd=!incomplete;let next=this.next??"stream";for(;next&&(incomplete||this.hasChars(1));)next=yield*this.parseNext(next)}atLineEnd(){let i=this.pos,ch=this.buffer[i];for(;" "===ch||"\t"===ch;)ch=this.buffer[++i];return!ch||"#"===ch||"\n"===ch||"\r"===ch&&"\n"===this.buffer[i+1]}charAt(n){return this.buffer[this.pos+n]}continueScalar(offset){let ch=this.buffer[offset];if(this.indentNext>0){let indent=0;for(;" "===ch;)ch=this.buffer[++indent+offset];if("\r"===ch){const next=this.buffer[indent+offset+1];if("\n"===next||!next&&!this.atEnd)return offset+indent+1}return"\n"===ch||indent>=this.indentNext||!ch&&!this.atEnd?offset+indent:-1}if("-"===ch||"."===ch){const dt=this.buffer.substr(offset,3);if(("---"===dt||"..."===dt)&&isEmpty(this.buffer[offset+3]))return-1}return offset}getLine(){let end=this.lineEndPos;return("number"!=typeof end||-1!==end&&end<this.pos)&&(end=this.buffer.indexOf("\n",this.pos),this.lineEndPos=end),-1===end?this.atEnd?this.buffer.substring(this.pos):null:("\r"===this.buffer[end-1]&&(end-=1),this.buffer.substring(this.pos,end))}hasChars(n){return this.pos+n<=this.buffer.length}setNext(state){return this.buffer=this.buffer.substring(this.pos),this.pos=0,this.lineEndPos=null,this.next=state,null}peek(n){return this.buffer.substr(this.pos,n)}*parseNext(next){switch(next){case"stream":return yield*this.parseStream();case"line-start":return yield*this.parseLineStart();case"block-start":return yield*this.parseBlockStart();case"doc":return yield*this.parseDocument();case"flow":return yield*this.parseFlowCollection();case"quoted-scalar":return yield*this.parseQuotedScalar();case"block-scalar":return yield*this.parseBlockScalar();case"plain-scalar":return yield*this.parsePlainScalar()}}*parseStream(){let line=this.getLine();if(null===line)return this.setNext("stream");if("\ufeff"===line[0]&&(yield*this.pushCount(1),line=line.substring(1)),"%"===line[0]){let dirEnd=line.length;const cs=line.indexOf("#");if(-1!==cs){const ch=line[cs-1];" "!==ch&&"\t"!==ch||(dirEnd=cs-1)}for(;;){const ch=line[dirEnd-1];if(" "!==ch&&"\t"!==ch)break;dirEnd-=1}const n=(yield*this.pushCount(dirEnd))+(yield*this.pushSpaces(!0));return yield*this.pushCount(line.length-n),this.pushNewline(),"stream"}if(this.atLineEnd()){const sp=yield*this.pushSpaces(!0);return yield*this.pushCount(line.length-sp),yield*this.pushNewline(),"stream"}return yield"",yield*this.parseLineStart()}*parseLineStart(){const ch=this.charAt(0);if(!ch&&!this.atEnd)return this.setNext("line-start");if("-"===ch||"."===ch){if(!this.atEnd&&!this.hasChars(4))return this.setNext("line-start");const s=this.peek(3);if("---"===s&&isEmpty(this.charAt(3)))return yield*this.pushCount(3),this.indentValue=0,this.indentNext=0,"doc";if("..."===s&&isEmpty(this.charAt(3)))return yield*this.pushCount(3),"stream"}return this.indentValue=yield*this.pushSpaces(!1),this.indentNext>this.indentValue&&!isEmpty(this.charAt(1))&&(this.indentNext=this.indentValue),yield*this.parseBlockStart()}*parseBlockStart(){const[ch0,ch1]=this.peek(2);if(!ch1&&!this.atEnd)return this.setNext("block-start");if(("-"===ch0||"?"===ch0||":"===ch0)&&isEmpty(ch1)){const n=(yield*this.pushCount(1))+(yield*this.pushSpaces(!0));return this.indentNext=this.indentValue+1,this.indentValue+=n,yield*this.parseBlockStart()}return"doc"}*parseDocument(){yield*this.pushSpaces(!0);const line=this.getLine();if(null===line)return this.setNext("doc");let n=yield*this.pushIndicators();switch(line[n]){case"#":yield*this.pushCount(line.length-n);case void 0:return yield*this.pushNewline(),yield*this.parseLineStart();case"{":case"[":return yield*this.pushCount(1),this.flowKey=!1,this.flowLevel=1,"flow";case"}":case"]":return yield*this.pushCount(1),"doc";case"*":return yield*this.pushUntil(isNotAnchorChar),"doc";case'"':case"'":return yield*this.parseQuotedScalar();case"|":case">":return n+=(yield*this.parseBlockScalarHeader()),n+=(yield*this.pushSpaces(!0)),yield*this.pushCount(line.length-n),yield*this.pushNewline(),yield*this.parseBlockScalar();default:return yield*this.parsePlainScalar()}}*parseFlowCollection(){let nl,sp,indent=-1;do{nl=yield*this.pushNewline(),nl>0?(sp=yield*this.pushSpaces(!1),this.indentValue=indent=sp):sp=0,sp+=(yield*this.pushSpaces(!0))}while(nl+sp>0);const line=this.getLine();if(null===line)return this.setNext("flow");if(-1!==indent&&indent<this.indentNext&&"#"!==line[0]||0===indent&&(line.startsWith("---")||line.startsWith("..."))&&isEmpty(line[3])){if(!(indent===this.indentNext-1&&1===this.flowLevel&&("]"===line[0]||"}"===line[0])))return this.flowLevel=0,yield"",yield*this.parseLineStart()}let n=0;for(;","===line[n];)n+=(yield*this.pushCount(1)),n+=(yield*this.pushSpaces(!0)),this.flowKey=!1;switch(n+=(yield*this.pushIndicators()),line[n]){case void 0:return"flow";case"#":return yield*this.pushCount(line.length-n),"flow";case"{":case"[":return yield*this.pushCount(1),this.flowKey=!1,this.flowLevel+=1,"flow";case"}":case"]":return yield*this.pushCount(1),this.flowKey=!0,this.flowLevel-=1,this.flowLevel?"flow":"doc";case"*":return yield*this.pushUntil(isNotAnchorChar),"flow";case'"':case"'":return this.flowKey=!0,yield*this.parseQuotedScalar();case":":{const next=this.charAt(1);if(this.flowKey||isEmpty(next)||","===next)return this.flowKey=!1,yield*this.pushCount(1),yield*this.pushSpaces(!0),"flow"}default:return this.flowKey=!1,yield*this.parsePlainScalar()}}*parseQuotedScalar(){const quote=this.charAt(0);let end=this.buffer.indexOf(quote,this.pos+1);if("'"===quote)for(;-1!==end&&"'"===this.buffer[end+1];)end=this.buffer.indexOf("'",end+2);else for(;-1!==end;){let n=0;for(;"\\"===this.buffer[end-1-n];)n+=1;if(n%2==0)break;end=this.buffer.indexOf('"',end+1)}const qb=this.buffer.substring(0,end);let nl=qb.indexOf("\n",this.pos);if(-1!==nl){for(;-1!==nl;){const cs=this.continueScalar(nl+1);if(-1===cs)break;nl=qb.indexOf("\n",cs)}-1!==nl&&(end=nl-("\r"===qb[nl-1]?2:1))}if(-1===end){if(!this.atEnd)return this.setNext("quoted-scalar");end=this.buffer.length}return yield*this.pushToIndex(end+1,!1),this.flowLevel?"flow":"doc"}*parseBlockScalarHeader(){this.blockScalarIndent=-1,this.blockScalarKeep=!1;let i=this.pos;for(;;){const ch=this.buffer[++i];if("+"===ch)this.blockScalarKeep=!0;else if(ch>"0"&&ch<="9")this.blockScalarIndent=Number(ch)-1;else if("-"!==ch)break}return yield*this.pushUntil((ch=>isEmpty(ch)||"#"===ch))}*parseBlockScalar(){let ch,nl=this.pos-1,indent=0;loop:for(let i=this.pos;ch=this.buffer[i];++i)switch(ch){case" ":indent+=1;break;case"\n":nl=i,indent=0;break;case"\r":{const next=this.buffer[i+1];if(!next&&!this.atEnd)return this.setNext("block-scalar");if("\n"===next)break}default:break loop}if(!ch&&!this.atEnd)return this.setNext("block-scalar");if(indent>=this.indentNext){-1===this.blockScalarIndent?this.indentNext=indent:this.indentNext+=this.blockScalarIndent;do{const cs=this.continueScalar(nl+1);if(-1===cs)break;nl=this.buffer.indexOf("\n",cs)}while(-1!==nl);if(-1===nl){if(!this.atEnd)return this.setNext("block-scalar");nl=this.buffer.length}}if(!this.blockScalarKeep)for(;;){let i=nl-1,ch=this.buffer[i];"\r"===ch&&(ch=this.buffer[--i]);const lastChar=i;for(;" "===ch||"\t"===ch;)ch=this.buffer[--i];if(!("\n"===ch&&i>=this.pos&&i+1+indent>lastChar))break;nl=i}return yield"",yield*this.pushToIndex(nl+1,!0),yield*this.parseLineStart()}*parsePlainScalar(){const inFlow=this.flowLevel>0;let ch,end=this.pos-1,i=this.pos-1;for(;ch=this.buffer[++i];)if(":"===ch){const next=this.buffer[i+1];if(isEmpty(next)||inFlow&&","===next)break;end=i}else if(isEmpty(ch)){let next=this.buffer[i+1];if("\r"===ch&&("\n"===next?(i+=1,ch="\n",next=this.buffer[i+1]):end=i),"#"===next||inFlow&&invalidFlowScalarChars.includes(next))break;if("\n"===ch){const cs=this.continueScalar(i+1);if(-1===cs)break;i=Math.max(i,cs-2)}}else{if(inFlow&&invalidFlowScalarChars.includes(ch))break;end=i}return ch||this.atEnd?(yield"",yield*this.pushToIndex(end+1,!0),inFlow?"flow":"doc"):this.setNext("plain-scalar")}*pushCount(n){return n>0?(yield this.buffer.substr(this.pos,n),this.pos+=n,n):0}*pushToIndex(i,allowEmpty){const s=this.buffer.slice(this.pos,i);return s?(yield s,this.pos+=s.length,s.length):(allowEmpty&&(yield""),0)}*pushIndicators(){switch(this.charAt(0)){case"!":return(yield*this.pushTag())+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators());case"&":return(yield*this.pushUntil(isNotAnchorChar))+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators());case"-":case"?":case":":{const inFlow=this.flowLevel>0,ch1=this.charAt(1);if(isEmpty(ch1)||inFlow&&invalidFlowScalarChars.includes(ch1))return inFlow?this.flowKey&&(this.flowKey=!1):this.indentNext=this.indentValue+1,(yield*this.pushCount(1))+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators())}}return 0}*pushTag(){if("<"===this.charAt(1)){let i=this.pos+2,ch=this.buffer[i];for(;!isEmpty(ch)&&">"!==ch;)ch=this.buffer[++i];return yield*this.pushToIndex(">"===ch?i+1:i,!1)}{let i=this.pos+1,ch=this.buffer[i];for(;ch;)if(tagChars.includes(ch))ch=this.buffer[++i];else{if("%"!==ch||!hexDigits.includes(this.buffer[i+1])||!hexDigits.includes(this.buffer[i+2]))break;ch=this.buffer[i+=3]}return yield*this.pushToIndex(i,!1)}}*pushNewline(){const ch=this.buffer[this.pos];return"\n"===ch?yield*this.pushCount(1):"\r"===ch&&"\n"===this.charAt(1)?yield*this.pushCount(2):0}*pushSpaces(allowTabs){let ch,i=this.pos-1;do{ch=this.buffer[++i]}while(" "===ch||allowTabs&&"\t"===ch);const n=i-this.pos;return n>0&&(yield this.buffer.substr(this.pos,n),this.pos=i),n}*pushUntil(test){let i=this.pos,ch=this.buffer[i];for(;!test(ch);)ch=this.buffer[++i];return yield*this.pushToIndex(i,!1)}}class LineCounter{constructor(){this.lineStarts=[],this.addNewLine=offset=>this.lineStarts.push(offset),this.linePos=offset=>{let low=0,high=this.lineStarts.length;for(;low<high;){const mid=low+high>>1;this.lineStarts[mid]<offset?low=mid+1:high=mid}if(this.lineStarts[low]===offset)return{line:low+1,col:1};if(0===low)return{line:0,col:offset};return{line:low,col:offset-this.lineStarts[low-1]+1}}}}function includesToken(list,type){for(let i=0;i<list.length;++i)if(list[i].type===type)return!0;return!1}function findNonEmptyIndex(list){for(let i=0;i<list.length;++i)switch(list[i].type){case"space":case"comment":case"newline":break;default:return i}return-1}function isFlowToken(token){switch(token?.type){case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"flow-collection":return!0;default:return!1}}function getPrevProps(parent){switch(parent.type){case"document":return parent.start;case"block-map":{const it=parent.items[parent.items.length-1];return it.sep??it.start}case"block-seq":return parent.items[parent.items.length-1].start;default:return[]}}function getFirstKeyStartProps(prev){if(0===prev.length)return[];let i=prev.length;loop:for(;--i>=0;)switch(prev[i].type){case"doc-start":case"explicit-key-ind":case"map-value-ind":case"seq-item-ind":case"newline":break loop}for(;"space"===prev[++i]?.type;);return prev.splice(i,prev.length)}function fixFlowSeqItems(fc){if("flow-seq-start"===fc.start.type)for(const it of fc.items)!it.sep||it.value||includesToken(it.start,"explicit-key-ind")||includesToken(it.sep,"map-value-ind")||(it.key&&(it.value=it.key),delete it.key,isFlowToken(it.value)?it.value.end?Array.prototype.push.apply(it.value.end,it.sep):it.value.end=it.sep:Array.prototype.push.apply(it.start,it.sep),delete it.sep)}class Parser{constructor(onNewLine){this.atNewLine=!0,this.atScalar=!1,this.indent=0,this.offset=0,this.onKeyLine=!1,this.stack=[],this.source="",this.type="",this.lexer=new Lexer,this.onNewLine=onNewLine}*parse(source,incomplete=!1){this.onNewLine&&0===this.offset&&this.onNewLine(0);for(const lexeme of this.lexer.lex(source,incomplete))yield*this.next(lexeme);incomplete||(yield*this.end())}*next(source){if(this.source=source,this.atScalar)return this.atScalar=!1,yield*this.step(),void(this.offset+=source.length);const type=tokenType(source);if(type)if("scalar"===type)this.atNewLine=!1,this.atScalar=!0,this.type="scalar";else{switch(this.type=type,yield*this.step(),type){case"newline":this.atNewLine=!0,this.indent=0,this.onNewLine&&this.onNewLine(this.offset+source.length);break;case"space":this.atNewLine&&" "===source[0]&&(this.indent+=source.length);break;case"explicit-key-ind":case"map-value-ind":case"seq-item-ind":this.atNewLine&&(this.indent+=source.length);break;case"doc-mode":case"flow-error-end":return;default:this.atNewLine=!1}this.offset+=source.length}else{const message=`Not a YAML token: ${source}`;yield*this.pop({type:"error",offset:this.offset,message:message,source:source}),this.offset+=source.length}}*end(){for(;this.stack.length>0;)yield*this.pop()}get sourceToken(){return{type:this.type,offset:this.offset,indent:this.indent,source:this.source}}*step(){const top=this.peek(1);if("doc-end"!==this.type||top&&"doc-end"===top.type){if(!top)return yield*this.stream();switch(top.type){case"document":return yield*this.document(top);case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return yield*this.scalar(top);case"block-scalar":return yield*this.blockScalar(top);case"block-map":return yield*this.blockMap(top);case"block-seq":return yield*this.blockSequence(top);case"flow-collection":return yield*this.flowCollection(top);case"doc-end":return yield*this.documentEnd(top)}yield*this.pop()}else{for(;this.stack.length>0;)yield*this.pop();this.stack.push({type:"doc-end",offset:this.offset,source:this.source})}}peek(n){return this.stack[this.stack.length-n]}*pop(error){const token=error??this.stack.pop();if(token)if(0===this.stack.length)yield token;else{const top=this.peek(1);switch("block-scalar"===token.type?token.indent="indent"in top?top.indent:0:"flow-collection"===token.type&&"document"===top.type&&(token.indent=0),"flow-collection"===token.type&&fixFlowSeqItems(token),top.type){case"document":top.value=token;break;case"block-scalar":top.props.push(token);break;case"block-map":{const it=top.items[top.items.length-1];if(it.value)return top.items.push({start:[],key:token,sep:[]}),void(this.onKeyLine=!0);if(!it.sep)return Object.assign(it,{key:token,sep:[]}),void(this.onKeyLine=!includesToken(it.start,"explicit-key-ind"));it.value=token;break}case"block-seq":{const it=top.items[top.items.length-1];it.value?top.items.push({start:[],value:token}):it.value=token;break}case"flow-collection":{const it=top.items[top.items.length-1];return void(!it||it.value?top.items.push({start:[],key:token,sep:[]}):it.sep?it.value=token:Object.assign(it,{key:token,sep:[]}))}default:yield*this.pop(),yield*this.pop(token)}if(!("document"!==top.type&&"block-map"!==top.type&&"block-seq"!==top.type||"block-map"!==token.type&&"block-seq"!==token.type)){const last=token.items[token.items.length-1];last&&!last.sep&&!last.value&&last.start.length>0&&-1===findNonEmptyIndex(last.start)&&(0===token.indent||last.start.every((st=>"comment"!==st.type||st.indent<token.indent)))&&("document"===top.type?top.end=last.start:top.items.push({start:last.start}),token.items.splice(-1,1))}}else{const message="Tried to pop an empty stack";yield{type:"error",offset:this.offset,source:"",message:message}}}*stream(){switch(this.type){case"directive-line":return void(yield{type:"directive",offset:this.offset,source:this.source});case"byte-order-mark":case"space":case"comment":case"newline":return void(yield this.sourceToken);case"doc-mode":case"doc-start":{const doc={type:"document",offset:this.offset,start:[]};return"doc-start"===this.type&&doc.start.push(this.sourceToken),void this.stack.push(doc)}}yield{type:"error",offset:this.offset,message:`Unexpected ${this.type} token in YAML stream`,source:this.source}}*document(doc){if(doc.value)return yield*this.lineEnd(doc);switch(this.type){case"doc-start":return void(-1!==findNonEmptyIndex(doc.start)?(yield*this.pop(),yield*this.step()):doc.start.push(this.sourceToken));case"anchor":case"tag":case"space":case"comment":case"newline":return void doc.start.push(this.sourceToken)}const bv=this.startBlockValue(doc);bv?this.stack.push(bv):yield{type:"error",offset:this.offset,message:`Unexpected ${this.type} token in YAML document`,source:this.source}}*scalar(scalar){if("map-value-ind"===this.type){const start=getFirstKeyStartProps(getPrevProps(this.peek(2)));let sep;scalar.end?(sep=scalar.end,sep.push(this.sourceToken),delete scalar.end):sep=[this.sourceToken];const map={type:"block-map",offset:scalar.offset,indent:scalar.indent,items:[{start:start,key:scalar,sep:sep}]};this.onKeyLine=!0,this.stack[this.stack.length-1]=map}else yield*this.lineEnd(scalar)}*blockScalar(scalar){switch(this.type){case"space":case"comment":case"newline":return void scalar.props.push(this.sourceToken);case"scalar":if(scalar.source=this.source,this.atNewLine=!0,this.indent=0,this.onNewLine){let nl=this.source.indexOf("\n")+1;for(;0!==nl;)this.onNewLine(this.offset+nl),nl=this.source.indexOf("\n",nl)+1}yield*this.pop();break;default:yield*this.pop(),yield*this.step()}}*blockMap(map){const it=map.items[map.items.length-1];switch(this.type){case"newline":if(this.onKeyLine=!1,it.value){const end="end"in it.value?it.value.end:void 0,last=Array.isArray(end)?end[end.length-1]:void 0;"comment"===last?.type?end?.push(this.sourceToken):map.items.push({start:[this.sourceToken]})}else it.sep?it.sep.push(this.sourceToken):it.start.push(this.sourceToken);return;case"space":case"comment":if(it.value)map.items.push({start:[this.sourceToken]});else if(it.sep)it.sep.push(this.sourceToken);else{if(this.atIndentedComment(it.start,map.indent)){const prev=map.items[map.items.length-2],end=prev?.value?.end;if(Array.isArray(end))return Array.prototype.push.apply(end,it.start),end.push(this.sourceToken),void map.items.pop()}it.start.push(this.sourceToken)}return}if(this.indent>=map.indent){const atNextItem=!this.onKeyLine&&this.indent===map.indent&&it.sep;let start=[];if(atNextItem&&it.sep&&!it.value){const nl=[];for(let i=0;i<it.sep.length;++i){const st=it.sep[i];switch(st.type){case"newline":nl.push(i);break;case"space":break;case"comment":st.indent>map.indent&&(nl.length=0);break;default:nl.length=0}}nl.length>=2&&(start=it.sep.splice(nl[1]))}switch(this.type){case"anchor":case"tag":return void(atNextItem||it.value?(start.push(this.sourceToken),map.items.push({start:start}),this.onKeyLine=!0):it.sep?it.sep.push(this.sourceToken):it.start.push(this.sourceToken));case"explicit-key-ind":return it.sep||includesToken(it.start,"explicit-key-ind")?atNextItem||it.value?(start.push(this.sourceToken),map.items.push({start:start})):this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:[this.sourceToken]}]}):it.start.push(this.sourceToken),void(this.onKeyLine=!0);case"map-value-ind":if(includesToken(it.start,"explicit-key-ind"))if(it.sep)if(it.value)map.items.push({start:[],key:null,sep:[this.sourceToken]});else if(includesToken(it.sep,"map-value-ind"))this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:start,key:null,sep:[this.sourceToken]}]});else if(isFlowToken(it.key)&&!includesToken(it.sep,"newline")){const start=getFirstKeyStartProps(it.start),key=it.key,sep=it.sep;sep.push(this.sourceToken),delete it.key,delete it.sep,this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:start,key:key,sep:sep}]})}else start.length>0?it.sep=it.sep.concat(start,this.sourceToken):it.sep.push(this.sourceToken);else if(includesToken(it.start,"newline"))Object.assign(it,{key:null,sep:[this.sourceToken]});else{const start=getFirstKeyStartProps(it.start);this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:start,key:null,sep:[this.sourceToken]}]})}else it.sep?it.value||atNextItem?map.items.push({start:start,key:null,sep:[this.sourceToken]}):includesToken(it.sep,"map-value-ind")?this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:[],key:null,sep:[this.sourceToken]}]}):it.sep.push(this.sourceToken):Object.assign(it,{key:null,sep:[this.sourceToken]});return void(this.onKeyLine=!0);case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":{const fs=this.flowScalar(this.type);return void(atNextItem||it.value?(map.items.push({start:start,key:fs,sep:[]}),this.onKeyLine=!0):it.sep?this.stack.push(fs):(Object.assign(it,{key:fs,sep:[]}),this.onKeyLine=!0))}default:{const bv=this.startBlockValue(map);if(bv)return atNextItem&&"block-seq"!==bv.type&&includesToken(it.start,"explicit-key-ind")&&map.items.push({start:start}),void this.stack.push(bv)}}}yield*this.pop(),yield*this.step()}*blockSequence(seq){const it=seq.items[seq.items.length-1];switch(this.type){case"newline":if(it.value){const end="end"in it.value?it.value.end:void 0,last=Array.isArray(end)?end[end.length-1]:void 0;"comment"===last?.type?end?.push(this.sourceToken):seq.items.push({start:[this.sourceToken]})}else it.start.push(this.sourceToken);return;case"space":case"comment":if(it.value)seq.items.push({start:[this.sourceToken]});else{if(this.atIndentedComment(it.start,seq.indent)){const prev=seq.items[seq.items.length-2],end=prev?.value?.end;if(Array.isArray(end))return Array.prototype.push.apply(end,it.start),end.push(this.sourceToken),void seq.items.pop()}it.start.push(this.sourceToken)}return;case"anchor":case"tag":if(it.value||this.indent<=seq.indent)break;return void it.start.push(this.sourceToken);case"seq-item-ind":if(this.indent!==seq.indent)break;return void(it.value||includesToken(it.start,"seq-item-ind")?seq.items.push({start:[this.sourceToken]}):it.start.push(this.sourceToken))}if(this.indent>seq.indent){const bv=this.startBlockValue(seq);if(bv)return void this.stack.push(bv)}yield*this.pop(),yield*this.step()}*flowCollection(fc){const it=fc.items[fc.items.length-1];if("flow-error-end"===this.type){let top;do{yield*this.pop(),top=this.peek(1)}while(top&&"flow-collection"===top.type)}else if(0===fc.end.length){switch(this.type){case"comma":case"explicit-key-ind":return void(!it||it.sep?fc.items.push({start:[this.sourceToken]}):it.start.push(this.sourceToken));case"map-value-ind":return void(!it||it.value?fc.items.push({start:[],key:null,sep:[this.sourceToken]}):it.sep?it.sep.push(this.sourceToken):Object.assign(it,{key:null,sep:[this.sourceToken]}));case"space":case"comment":case"newline":case"anchor":case"tag":return void(!it||it.value?fc.items.push({start:[this.sourceToken]}):it.sep?it.sep.push(this.sourceToken):it.start.push(this.sourceToken));case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":{const fs=this.flowScalar(this.type);return void(!it||it.value?fc.items.push({start:[],key:fs,sep:[]}):it.sep?this.stack.push(fs):Object.assign(it,{key:fs,sep:[]}))}case"flow-map-end":case"flow-seq-end":return void fc.end.push(this.sourceToken)}const bv=this.startBlockValue(fc);bv?this.stack.push(bv):(yield*this.pop(),yield*this.step())}else{const parent=this.peek(2);if("block-map"===parent.type&&("map-value-ind"===this.type&&parent.indent===fc.indent||"newline"===this.type&&!parent.items[parent.items.length-1].sep))yield*this.pop(),yield*this.step();else if("map-value-ind"===this.type&&"flow-collection"!==parent.type){const start=getFirstKeyStartProps(getPrevProps(parent));fixFlowSeqItems(fc);const sep=fc.end.splice(1,fc.end.length);sep.push(this.sourceToken);const map={type:"block-map",offset:fc.offset,indent:fc.indent,items:[{start:start,key:fc,sep:sep}]};this.onKeyLine=!0,this.stack[this.stack.length-1]=map}else yield*this.lineEnd(fc)}}flowScalar(type){if(this.onNewLine){let nl=this.source.indexOf("\n")+1;for(;0!==nl;)this.onNewLine(this.offset+nl),nl=this.source.indexOf("\n",nl)+1}return{type:type,offset:this.offset,indent:this.indent,source:this.source}}startBlockValue(parent){switch(this.type){case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return this.flowScalar(this.type);case"block-scalar-header":return{type:"block-scalar",offset:this.offset,indent:this.indent,props:[this.sourceToken],source:""};case"flow-map-start":case"flow-seq-start":return{type:"flow-collection",offset:this.offset,indent:this.indent,start:this.sourceToken,items:[],end:[]};case"seq-item-ind":return{type:"block-seq",offset:this.offset,indent:this.indent,items:[{start:[this.sourceToken]}]};case"explicit-key-ind":{this.onKeyLine=!0;const start=getFirstKeyStartProps(getPrevProps(parent));return start.push(this.sourceToken),{type:"block-map",offset:this.offset,indent:this.indent,items:[{start:start}]}}case"map-value-ind":{this.onKeyLine=!0;const start=getFirstKeyStartProps(getPrevProps(parent));return{type:"block-map",offset:this.offset,indent:this.indent,items:[{start:start,key:null,sep:[this.sourceToken]}]}}}return null}atIndentedComment(start,indent){return"comment"===this.type&&(!(this.indent<=indent)&&start.every((st=>"newline"===st.type||"space"===st.type)))}*documentEnd(docEnd){"doc-mode"!==this.type&&(docEnd.end?docEnd.end.push(this.sourceToken):docEnd.end=[this.sourceToken],"newline"===this.type&&(yield*this.pop()))}*lineEnd(token){switch(this.type){case"comma":case"doc-start":case"doc-end":case"flow-seq-end":case"flow-map-end":case"map-value-ind":yield*this.pop(),yield*this.step();break;case"newline":this.onKeyLine=!1;default:token.end?token.end.push(this.sourceToken):token.end=[this.sourceToken],"newline"===this.type&&(yield*this.pop())}}}function parseOptions(options){const prettyErrors=!1!==options.prettyErrors;return{lineCounter:options.lineCounter||prettyErrors&&new LineCounter||null,prettyErrors:prettyErrors}}function parseDocument(source,options={}){const{lineCounter:lineCounter,prettyErrors:prettyErrors}=parseOptions(options),parser=new Parser(lineCounter?.addNewLine),composer=new Composer(options);let doc=null;for(const _doc of composer.compose(parser.parse(source),!0,source.length))if(doc){if("silent"!==doc.options.logLevel){doc.errors.push(new YAMLParseError(_doc.range.slice(0,2),"MULTIPLE_DOCS","Source contains multiple documents; please use YAML.parseAllDocuments()"));break}}else doc=_doc;return prettyErrors&&lineCounter&&(doc.errors.forEach(prettifyError(source,lineCounter)),doc.warnings.forEach(prettifyError(source,lineCounter))),doc}var YAML=Object.freeze({__proto__:null,CST:cst,Composer:Composer,Document:Document,Schema:Schema,YAMLError:YAMLError,YAMLParseError:YAMLParseError,YAMLWarning:YAMLWarning,Alias:Alias,isAlias:isAlias,isCollection:isCollection$1,isDocument:isDocument,isMap:isMap,isNode:isNode,isPair:isPair,isScalar:isScalar$1,isSeq:isSeq,Pair:Pair,Scalar:Scalar,YAMLMap:YAMLMap,YAMLSeq:YAMLSeq,Lexer:Lexer,LineCounter:LineCounter,Parser:Parser,parse:function(src,reviver,options){let _reviver;"function"==typeof reviver?_reviver=reviver:void 0===options&&reviver&&"object"==typeof reviver&&(options=reviver);const doc=parseDocument(src,options);if(!doc)return null;if(doc.warnings.forEach((warning=>warn(doc.options.logLevel,warning))),doc.errors.length>0){if("silent"!==doc.options.logLevel)throw doc.errors[0];doc.errors=[]}return doc.toJS(Object.assign({reviver:_reviver},options))},parseAllDocuments:function(source,options={}){const{lineCounter:lineCounter,prettyErrors:prettyErrors}=parseOptions(options),parser=new Parser(lineCounter?.addNewLine),composer=new Composer(options),docs=Array.from(composer.compose(parser.parse(source)));if(prettyErrors&&lineCounter)for(const doc of docs)doc.errors.forEach(prettifyError(source,lineCounter)),doc.warnings.forEach(prettifyError(source,lineCounter));return docs.length>0?docs:Object.assign([],{empty:!0},composer.streamInfo())},parseDocument:parseDocument,stringify:function(value,replacer,options){let _replacer=null;if("function"==typeof replacer||Array.isArray(replacer)?_replacer=replacer:void 0===options&&replacer&&(options=replacer),"string"==typeof options&&(options=options.length),"number"==typeof options){const indent=Math.round(options);options=indent<1?void 0:indent>8?{indent:8}:{indent:indent}}if(void 0===value){const{keepUndefined:keepUndefined}=options??replacer??{};if(!keepUndefined)return}return new Document(value,_replacer,options).toString(options)},visit:visit$1,visitAsync:visitAsync});class GameServer{constructor(server){this._server=server}href(path){return this._server.href(path)}get(path){return this._server.get(path)}ready(callback){this._server.ready(callback)}close(callback){this._server.close(callback)}gameHeader(){return this._server.get("header.yml").then((data=>YAML.parse(data)))}}var EPlayerState;!function(EPlayerState){EPlayerState[EPlayerState.Idle=0]="Idle",EPlayerState[EPlayerState.Loading=1]="Loading",EPlayerState[EPlayerState.BecomePlaying=2]="BecomePlaying",EPlayerState[EPlayerState.Playing=3]="Playing",EPlayerState[EPlayerState.Pause=4]="Pause"}(EPlayerState||(EPlayerState={}));class PlayerProxy{constructor(player){this._player=player}get root(){return this._player.root}get gameServer(){return this._player.gameServer}get width(){return this._player.width}set width(value){this.resize({width:value})}get height(){return this._player.height}set height(value){this.resize({height:value})}get resizable(){return this._player.resizable}set resizable(value){this._player.resizable=value}get speed(){return this._player.speed}set speed(value){this._player.speed=value}get url(){return this._player.url}set url(value){this._player.url=value}get header(){return this._player.header}set header(value){this._player.header=value}get autoPlay(){return!1}set autoPlay(value){}resize(width,height){this.resizable&&("object"==typeof width?this._player.resize(width):this._player.resize(width,height))}ready(){this._player.ready()}saveState(){return this._player.saveState()}loadState(state){this._player.loadState(state)}getController(controllerId){return this._player.getController(controllerId)}tick(delta){this._player.tick(delta)}}class Player{get isLoading(){return this._state==EPlayerState.Loading}get isPlaying(){return this._state==EPlayerState.Playing}get isPaused(){return this._state==EPlayerState.Pause}constructor(config,element,options){this._state=EPlayerState.Idle,this._ui={},this._exports={},this._speed=1,this._physicsAccumulator=0,this._proxy=new PlayerProxy(this),this._config=config,this._options=options,this._controllerBus=new ControllerBus({player:this,inputController:config.inputController}),this._tickFromGame=this._tickFromGame.bind(this),void 0!==this._options.onReady&&(this._readyCallback=this._options.onReady),"dataset"in element&&(this._ui.element=element,this._options=Object.assign({},options),void 0===this._options.url&&void 0!==element.dataset.url&&(this._options.url=element.dataset.url),this._attach(),this.autoPlay&&this.play())}_attach(){if(void 0!==this._ui.element){{let div=document.createElement("div");this._ui.wrapper=div,div.addEventListener("mouseenter",(()=>this._onMouseEnter())),div.addEventListener("mousemove",(()=>this._onMouseMove())),div.addEventListener("mouseleave",(()=>this._onMouseLeave())),div.style.position="relative",div.style.backgroundSize="cover",void 0!==this._options.splashart&&(div.style.backgroundImage=`url('${this._options.splashart}')`),this._ui.element.appendChild(div)}{let div=document.createElement("div");this._ui.base=div,div.style.width="100%",div.style.height="100%",div.style.position="absolute",div.style.left="0",div.style.top="0",this._ui.wrapper.appendChild(div)}this.resize({width:this._options.width,height:this._options.height}),this._ui.overlay=new Overlay(this._ui.wrapper),this._ui.overlay.onPlay=()=>this.play(),this._ui.overlay.onSpeed=value=>this.speed=value,this._resizeListener=()=>this._onResize(),window.addEventListener("resize",this._resizeListener)}}_initGame(){return new Promise(((resolve,reject)=>void 0===this._ui.element?reject("element is not an HTMLElement"):(console.log("start game server..."),this._startGameServer().then((()=>(console.log("game server started"),this._loadHeader().then((()=>this._loadGame().then(resolve)))))))))}_startGameServer(){return new Promise((resolve=>{if(void 0===this._options.url)return resolve();const fileServer=function(sdkConfig,baseUrl){if(baseUrl.endsWith(".zip"))return sdkConfig.zipServer(baseUrl);if(baseUrl.endsWith(".yaml")||baseUrl.endsWith(".yml")){const pos=baseUrl.lastIndexOf("/");baseUrl=pos<0?"":baseUrl.substring(0,pos)}return sdkConfig.fileServer(baseUrl)}(this._config,this._options.url);this._gameServer=new GameServer(fileServer),this._gameServer.ready(resolve)}))}_loadHeader(){return console.log("load header..."),new Promise(((resolve,reject)=>void 0!==this._options.header?resolve(this._options.header):void 0===this._gameServer?reject("failed to get header"):this._gameServer.gameHeader().then(resolve))).then((header=>{console.log("header loaded"),console.log(header),this._options.header=header,this._proxy.resize({width:header.width,height:header.height})}))}_getBootFunction(data){let _exports={},_module={exports:{boot:void 0}};const result=new Function("exports","module","define",data)(_exports,_module,void 0);void 0===_exports.boot?void 0===_module.exports.boot?"object"!==result||void 0===result.boot||(this._exports.boot=result.boot):this._exports.boot=_module.exports.boot:this._exports.boot=_exports.boot}_loadBoot(){var _a;console.log("load boot...");const boot=this.header.boot;if(void 0!==boot){if(!boot.endsWith(".js"))return new Promise(((resolve,reject)=>{const m=window[boot];return void 0===m||void 0===m.boot?reject("invalid boot module"):(this._exports.boot=m.boot,resolve())}));if(boot.startsWith("http"))return fetch(null===(_a=this.header)||void 0===_a?void 0:_a.boot).then((res=>{if(!res.ok)throw new Error(res.statusText);return res.text()})).then((data=>(this._getBootFunction(data),Promise.resolve())));if(void 0!==this._gameServer)return this._gameServer.get(boot).then((data=>(this._getBootFunction(data),Promise.resolve())))}return new Promise(((resolve,reject)=>reject("failed to load boot")))}_loadGame(){return new Promise(((resolve,reject)=>{this._loadBoot().then((()=>void 0===this._exports.boot?reject("missing boot"):(console.log("boot loaded"),this._game=this._exports.boot(this._proxy),this._game.ticker=this._tickFromGame,console.log(this._game),resolve())))}))}_notifyReady(){this._playTask=void 0,void 0!==this._readyCallback&&this._readyCallback()}_play(url,header,autoPlay){return void 0!==url||void 0!==header?(this.stop(),this._options.url=url,this._options.header=header,void((!0===autoPlay||this.autoPlay)&&this._play())):this._state===EPlayerState.Pause?(this._state=EPlayerState.Playing,this._ui.overlay&&this._ui.overlay.playing(),void(void 0!==this._game&&this._game.play())):void(this._state===EPlayerState.Idle&&(this._state=EPlayerState.Loading,this._startLoadingDate=new Date,this._ui.overlay&&this._ui.overlay.loading(),this._playTask=this._initGame().catch((reason=>{console.error(reason),this._notifyReady()}))))}_onMouseEnter(){this._ui.overlay&&this._ui.overlay.mouseEnter()}_onMouseMove(){this._ui.overlay&&this._ui.overlay.mouseMove()}_onMouseLeave(){this._ui.overlay&&this._ui.overlay.mouseLeave()}get root(){return this._ui.base}get gameServer(){return this._gameServer}resize(width,height){void 0!==this._ui.wrapper&&("number"!=typeof width&&(height=width.height,width=width.width),this._ui.wrapper.style.width=void 0!==width?`${width}px`:"100%",this._ui.wrapper.style.height=void 0!==height?`${height}px`:"100%",this._onResize())}_onResize(){void 0!==this._game&&this._game.resize()}get onReady(){return this._readyCallback}set onReady(callback){this._readyCallback=callback,this.isPlaying&&this._notifyReady()}_ready(){this._state===EPlayerState.BecomePlaying&&(this._state=EPlayerState.Playing,this._ui.overlay&&this._ui.overlay.playing(),this._game&&this._game.play(),this._notifyReady())}ready(){if(this._state!=EPlayerState.Loading)return;this._state=EPlayerState.BecomePlaying;const timeRemaining=1e3-(+new Date-+this._startLoadingDate);timeRemaining>0?setTimeout((()=>this._ready()),timeRemaining):this._ready()}controller(id){return this._controllerBus.get(id)}get width(){return this._ui.wrapper?this._ui.wrapper.clientWidth:0}set width(value){this.resize({width:value})}get height(){return this._ui.wrapper?this._ui.wrapper.clientHeight:0}set height(value){this.resize({height:value})}get resizable(){return!0===this._options.resizable}set resizable(value){this._options.resizable=value}get speed(){return this._speed}set speed(value){this._speed=value}get url(){return this._options.url}set url(value){this.play({url:value})}get header(){return this._options.header}set header(value){this.play({header:value})}get autoPlay(){return!0===this._options.autoPlay}set autoPlay(value){this._options.autoPlay=value}get simulated(){return!0===this._options.simulated}set simulated(value){this._options.simulated=value}play(options){"object"!=typeof options?void 0===options?this._play():this._play(options):this._play(options.url,options.header,options.autoPlay)}pause(){this.isPlaying&&(void 0!==this._game&&this._game.pause(),this._ui.overlay&&this._ui.overlay.paused(),this._state=EPlayerState.Pause)}stop(){void 0!==this._game&&(this._game.stop(),this._game=void 0),this._ui.overlay&&this._ui.overlay.stopped(),void 0!==this._gameServer&&(this._gameServer.close(),this._gameServer=void 0),this._speed=1,this._state=EPlayerState.Idle}reload(){this.stop(),this.play()}remove(){this.stop(),void 0!==this._resizeListener&&window.removeEventListener("resize",this._resizeListener),this._ui.overlay&&(this._ui.overlay.remove(),this._ui.overlay=void 0),this._ui.wrapper&&(this._ui.wrapper.remove(),this._ui.wrapper=void 0)}saveState(){return{physicsAccumulator:this._physicsAccumulator,game:void 0!==this._game?this._game.saveState():{},controllers:this._controllerBus.saveState()}}loadState(state){this._physicsAccumulator=void 0!==state.physicsAccumulator?state.physicsAccumulator:0,void 0!==this._game&&this._game.loadState(void 0!==state.game?state.game:{}),this._controllerBus.loadState(void 0!==state.controllers?state.controllers:[{},{}])}_tickFromGame(delta){void 0===this.ticker?this.simulated||this.tick(delta):this.ticker(delta)}tick(delta){if(void 0!==this._game){for(this._physicsAccumulator+=delta*this.speed;this._physicsAccumulator>.01;)this._tickOneFrame(.01),this._physicsAccumulator-=.01;this._tickOneFrame(.01)}}_tickOneFrame(delta){const state=this._game.getStateForAgent();this._game.tick(this._controllerBus.inputs(state),delta)}getController(controllerId){return this._controllerBus.get(controllerId)}}function defaultOptions(){return{resizable:!0,speed:1}}function isElementArray(_){return"length"in _}function createPlayer(config,element,options){return new Player(config,element,options)}exports.MetaPlayer=class{constructor(players){this._players=[],this._tickFromGame=this._tickFromGame.bind(this),this._handleReady=this._handleReady.bind(this),void 0!==players&&players.forEach((other=>this.addPlayer(other)))}get masterPlayer(){return void 0!==this._players?this._players[0]:void 0}get speed(){return this.masterPlayer.speed}set speed(val){this._players.forEach((other=>other.speed=val))}get width(){return this.masterPlayer.width}set width(val){this._players.forEach((other=>other.width=val))}get height(){return this.masterPlayer.height}set height(val){this._players.forEach((other=>other.height=val))}get resizable(){return this.masterPlayer.resizable}set resizable(val){this._players.forEach((other=>other.resizable=val))}get url(){return this.masterPlayer.url}set url(val){this._players.forEach((other=>other.url=val))}get header(){return this.masterPlayer.header}set header(val){this._players.forEach((other=>other.header=val))}get autoPlay(){return this.masterPlayer.autoPlay}set autoPlay(val){this._players.forEach((other=>other.autoPlay=val))}get simulated(){return!1}set simulated(val){}get isLoading(){return this.masterPlayer.isLoading}get isPlaying(){return this.masterPlayer.isPlaying}get isPaused(){return this.masterPlayer.isPaused}play(options){var _options={url:void 0,header:void 0,autoPlay:!0};void 0===options||("string"==typeof options?_options.url=options:(_options.url=options.url,_options.header=options.header)),this._players.forEach((other=>other.play(_options)))}pause(){this._players.forEach((other=>other.pause()))}stop(){this._players.forEach((other=>other.stop()))}saveState(){return this.masterPlayer.saveState()}loadState(state){this._players.forEach((other=>other.loadState(state)))}_tickFromGame(delta){this.tick(delta)}tick(delta){const state=this.saveState();this._players.forEach((other=>{other.loadState(state),other.tick(delta)}))}getController(controllerId){}remove(){}resize(width,height){"object"==typeof width?this._players.forEach((other=>other.resize(width))):void 0!==height&&this._players.forEach((other=>other.resize(width,height)))}_handleReady(){this._players.every((other=>other.isPlaying))&&this.ready()}ready(){void 0!==this.onReady&&this.onReady()}addPlayer(other){this._players.push(other),other.ticker=1===this._players.length?this._tickFromGame:void 0,other.simulated=!0,other.onReady=this._handleReady}removePlayer(other){const index=this._players.indexOf(other);index<0||(delete this._players[index],other.ticker=void 0,other.simulated=!1)}},exports.VERSION="0.1.0-alpha.21",exports.defaultOptions=defaultOptions,exports.init=function(config,element,options){let _elements,_options={resizable:!0,speed:1};var _;return void 0===(_=element)||isElementArray(_)||"className"in _?_elements=element:options=element,void 0!==options&&(_options=Object.assign(Object.assign({},_options),options)),null==_elements&&(_elements=void 0!==_options.element?_options.element:document.getElementsByClassName("moroboxai-player")),isElementArray(_elements)?Array.prototype.map.call(_elements,(_=>createPlayer(config,_,_options))):createPlayer(config,_elements,_options)},Object.defineProperty(exports,"__esModule",{value:!0})}));
